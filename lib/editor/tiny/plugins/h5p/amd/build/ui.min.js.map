{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny H5P Content configuration.\n *\n * @module      tiny_h5p/commands\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {\n    displayFilepicker,\n    getPluginConfiguration,\n} from 'editor_tiny/utils';\nimport {component} from './common';\n\nimport {getList} from 'core/normalise';\nimport {renderForPromise} from 'core/templates';\nimport Modal from 'tiny_h5p/modal';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\n\nlet openingSelection = null;\n\nexport const handleAction = (editor) => {\n    openingSelection = editor.selection.getBookmark();\n    displayDialogue(editor);\n};\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} data\n */\nconst getTemplateContext = (editor, data) => {\n    const config = getPluginConfiguration(editor, 'h5p');\n\n    const canUpload = config.permissions?.upload ?? false;\n    const canEmbed = config.permissions?.embed ?? false;\n    const canUploadAndEmbed = canUpload && canEmbed;\n\n    return Object.assign({}, {\n        elementid: editor.id,\n        canUpload,\n        canEmbed,\n        canUploadAndEmbed,\n        showOptions: false,\n        fileURL: data?.url ?? '',\n    }, data);\n};\n\n/**\n * Get the URL from the submitted form.\n *\n * @param {FormNode} form\n * @param {string} submittedUrl\n * @param {object} config\n * @returns {URL|null}\n */\nconst getUrlFromSubmission = (form, submittedUrl, config) => {\n    if (!submittedUrl) {\n        return null;\n    }\n\n    // Generate a URL Object for the submitted URL.\n    const url = new URL(submittedUrl);\n\n    if (config.permissions?.upload) {\n        if (form.querySelector('[name=\"download\"]').checked) {\n            url.searchParams.append('export', 1);\n        }\n    }\n\n    if (config.permissions?.embed) {\n        if (form.querySelector('[name=\"embed\"]').checked) {\n            url.searchParams.append('embed', 1);\n        }\n    }\n    if (form.querySelector('[name=\"copyright\"]').checked) {\n        url.searchParams.append('copyright', 1);\n    }\n\n    return url;\n};\n\nconst handleDialogueSubmission = async (editor, modal, data) => {\n    const config = getPluginConfiguration(editor, 'h5p');\n\n    const form = getList(modal.getRoot())[0].querySelector('form');\n    if (!form) {\n        // The form couldn't be found, which is weird.\n        // This should not happen.\n        // Display the dialogue again\n        displayDialogue(editor, Object.assign({}, data));\n        return;\n    }\n\n    // Get the URL from the submitted form.\n    const submittedUrl = form.querySelector('input[name=\"url\"]').value;\n    const url = getUrlFromSubmission(form, submittedUrl, config);\n\n    if (!url) {\n        // The URL is invalid.\n        // Fill it in and represent the dialogue with an error.\n        displayDialogue(editor, Object.assign({}, data, {\n            url: submittedUrl,\n            invalidUrl: true,\n        }));\n        return;\n    }\n\n\n    const content = await renderForPromise(`${component}/content`, {\n        url: url.toString(),\n    });\n\n    editor.selection.moveToBookmark(openingSelection);\n    editor.execCommand('mceInsertContent', false, content.html);\n    editor.selection.moveToBookmark(openingSelection);\n};\n\nconst getCurrentH5PData = (currentH5P) => {\n    const data = {};\n    let url;\n    try {\n        url = new URL(currentH5P.textContent);\n    } catch (error) {\n        return data;\n    }\n\n    if (url.searchParams.has('export')) {\n        data.download = true;\n        data.showOptions = true;\n        url.searchParams.delete('export');\n    }\n\n    if (url.searchParams.has('embed')) {\n        data.embed = true;\n        data.showOptions = true;\n        url.searchParams.delete('embed');\n    }\n\n    if (url.searchParams.has('copyright')) {\n        data.copyright = true;\n        data.showOptions = true;\n        url.searchParams.delete('copyright');\n    }\n\n    data.url = url.toString();\n\n    return data;\n};\n\nconst displayDialogue = async (editor, data = {}) => {\n    const selection = editor.selection.getNode();\n    const currentH5P = selection.closest('.h5p-placeholder');\n    if (currentH5P) {\n        Object.assign(data, getCurrentH5PData(currentH5P));\n    }\n\n    const modal = await ModalFactory.create({\n        type: Modal.TYPE,\n        templateContext: getTemplateContext(editor, data),\n        large: true,\n    });\n    modal.show();\n\n    const $root = modal.getRoot();\n    const root = $root[0];\n    $root.on(ModalEvents.save, (event, modal) => {\n        handleDialogueSubmission(editor, modal, data);\n    });\n\n    root.addEventListener('click', (e) => {\n        const filepickerButton = e.target.closest('[data-target=\"filepicker\"]');\n        if (filepickerButton) {\n            displayFilepicker(editor, 'h5p').then((params) => {\n                if (params.url !== '') {\n                    const input = root.querySelector('form input[name=\"url\"]');\n                    input.value = params.url;\n                }\n                return params;\n            })\n                .catch();\n        }\n    });\n};\n"],"names":["openingSelection","editor","selection","getBookmark","displayDialogue","getTemplateContext","data","config","canUpload","permissions","_config$permissions","upload","canEmbed","_config$permissions2","embed","canUploadAndEmbed","Object","assign","elementid","id","showOptions","fileURL","url","handleDialogueSubmission","async","modal","form","getRoot","querySelector","submittedUrl","value","URL","_config$permissions3","checked","searchParams","append","_config$permissions4","getUrlFromSubmission","invalidUrl","content","component","toString","moveToBookmark","execCommand","html","getCurrentH5PData","currentH5P","textContent","error","has","download","delete","copyright","getNode","closest","ModalFactory","create","type","Modal","TYPE","templateContext","large","show","$root","root","on","ModalEvents","save","event","addEventListener","e","target","then","params","catch"],"mappings":";;;;;;;8OAmCIA,iBAAmB,2BAEMC,SACzBD,iBAAmBC,OAAOC,UAAUC,cACpCC,gBAAgBH,eAUdI,mBAAqB,CAACJ,OAAQK,iHAC1BC,QAAS,iCAAuBN,OAAQ,OAExCO,oEAAYD,OAAOE,kDAAPC,oBAAoBC,+DAChCC,oEAAWL,OAAOE,mDAAPI,qBAAoBC,8DAC/BC,kBAAoBP,WAAaI,gBAEhCI,OAAOC,OAAO,GAAI,CACrBC,UAAWjB,OAAOkB,GAClBX,UAAAA,UACAI,SAAAA,SACAG,kBAAAA,kBACAK,aAAa,EACbC,0BAASf,MAAAA,YAAAA,KAAMgB,mCAAO,IACvBhB,OAqCDiB,yBAA2BC,MAAOvB,OAAQwB,MAAOnB,cAC7CC,QAAS,iCAAuBN,OAAQ,OAExCyB,MAAO,sBAAQD,MAAME,WAAW,GAAGC,cAAc,YAClDF,iBAIDtB,gBAAgBH,OAAQe,OAAOC,OAAO,GAAIX,aAKxCuB,aAAeH,KAAKE,cAAc,qBAAqBE,MACvDR,IAxCmB,EAACI,KAAMG,aAActB,4DACzCsB,oBACM,WAILP,IAAM,IAAIS,IAAIF,kDAEhBtB,OAAOE,6CAAPuB,qBAAoBrB,QAChBe,KAAKE,cAAc,qBAAqBK,SACxCX,IAAIY,aAAaC,OAAO,SAAU,gCAItC5B,OAAOE,6CAAP2B,qBAAoBtB,OAChBY,KAAKE,cAAc,kBAAkBK,SACrCX,IAAIY,aAAaC,OAAO,QAAS,GAGrCT,KAAKE,cAAc,sBAAsBK,SACzCX,IAAIY,aAAaC,OAAO,YAAa,GAGlCb,KAiBKe,CAAqBX,KAAMG,aAActB,YAEhDe,gBAGDlB,gBAAgBH,OAAQe,OAAOC,OAAO,GAAIX,KAAM,CAC5CgB,IAAKO,aACLS,YAAY,WAMdC,cAAgB,yCAAoBC,8BAAqB,CAC3DlB,IAAKA,IAAImB,aAGbxC,OAAOC,UAAUwC,eAAe1C,kBAChCC,OAAO0C,YAAY,oBAAoB,EAAOJ,QAAQK,MACtD3C,OAAOC,UAAUwC,eAAe1C,mBAG9B6C,kBAAqBC,mBACjBxC,KAAO,OACTgB,QAEAA,IAAM,IAAIS,IAAIe,WAAWC,aAC3B,MAAOC,cACE1C,YAGPgB,IAAIY,aAAae,IAAI,YACrB3C,KAAK4C,UAAW,EAChB5C,KAAKc,aAAc,EACnBE,IAAIY,aAAaiB,OAAO,WAGxB7B,IAAIY,aAAae,IAAI,WACrB3C,KAAKQ,OAAQ,EACbR,KAAKc,aAAc,EACnBE,IAAIY,aAAaiB,OAAO,UAGxB7B,IAAIY,aAAae,IAAI,eACrB3C,KAAK8C,WAAY,EACjB9C,KAAKc,aAAc,EACnBE,IAAIY,aAAaiB,OAAO,cAG5B7C,KAAKgB,IAAMA,IAAImB,WAERnC,MAGLF,gBAAkBoB,eAAOvB,YAAQK,4DAAO,SACpCJ,UAAYD,OAAOC,UAAUmD,UAC7BP,WAAa5C,UAAUoD,QAAQ,oBACjCR,YACA9B,OAAOC,OAAOX,KAAMuC,kBAAkBC,mBAGpCrB,YAAc8B,uBAAaC,OAAO,CACpCC,KAAMC,eAAMC,KACZC,gBAAiBvD,mBAAmBJ,OAAQK,MAC5CuD,OAAO,IAEXpC,MAAMqC,aAEAC,MAAQtC,MAAME,UACdqC,KAAOD,MAAM,GACnBA,MAAME,GAAGC,sBAAYC,MAAM,CAACC,MAAO3C,SAC/BF,yBAAyBtB,OAAQwB,MAAOnB,SAG5C0D,KAAKK,iBAAiB,SAAUC,IACHA,EAAEC,OAAOjB,QAAQ,4DAEpBrD,OAAQ,OAAOuE,MAAMC,YAChB,KAAfA,OAAOnD,IAAY,CACL0C,KAAKpC,cAAc,0BAC3BE,MAAQ2C,OAAOnD,WAElBmD,UAENC"}