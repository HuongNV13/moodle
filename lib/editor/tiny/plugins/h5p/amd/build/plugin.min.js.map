{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny H5P plugin for Moodle.\n *\n * @module      tiny_h5p/plugin\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {getTinyMCE} from 'editor_tiny/loader';\nimport {\n    addContextmenuItem,\n    addMenubarItem,\n    addToolbarButton,\n    displayFilepicker,\n    getButtonImage,\n    getPluginConfiguration,\n} from 'editor_tiny/utils';\n\nimport {getList} from 'core/normalise';\nimport {get_string as getString} from 'core/str';\nimport {renderForPromise} from 'core/templates';\nimport Modal from 'tiny_h5p/modal';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\n\nconst component = 'tiny_h5p';\n\nlet openingSelection = null;\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} data\n */\nconst getTemplateContext = (editor, data) => {\n    const config = getPluginConfiguration(editor, 'h5p');\n\n    // TODO Tidy these up and simplify.\n    const permissions = {\n        canUpload: config.permissions?.upload ?? false,\n        canEmbed: config.permissions?.embed ?? false,\n    };\n\n    permissions.canUploadAndEmbed = permissions.canUpload && permissions.canEmbed;\n\n    // TODO Fill these - these are just placeholders.\n    const showOptions = {};\n    const optionDownloadButton = true;\n    const optionEmbedButton = true;\n    const optionCopyrightButton = true;\n    const fileURL = data?.url ?? '';\n\n    return Object.assign({}, {\n        elementid: editor.id,\n        canUpload: permissions.canUpload,\n        canEmbed: permissions.canEmbed,\n        canUploadAndEmbed: permissions.canUploadAndEmbed,\n        showOptions: showOptions,\n        fileURL: fileURL,\n        optionDownloadButton: optionDownloadButton,\n        optionEmbedButton: optionEmbedButton,\n        optionCopyrightButton: optionCopyrightButton,\n    }, data);\n};\n\n/**\n * Get the URL from the submitted form.\n *\n * @param {FormNode} form\n * @param {string} submittedUrl\n * @param {object} config\n * @returns {URL|null}\n */\nconst getUrlFromSubmission = (form, submittedUrl, config) => {\n    if (!submittedUrl) {\n        return null;\n    }\n\n    // Generate a URL Object for the submitted URL.\n    const url = new URL(submittedUrl);\n\n    if (config.permissions?.upload) {\n        if (form.querySelector('[name=\"download\"]').checked) {\n            url.searchParams.append('export', 1);\n        }\n    }\n\n    if (config.permissions?.embed) {\n        if (form.querySelector('[name=\"embed\"]').checked) {\n            url.searchParams.append('embed', 1);\n        }\n    }\n    if (form.querySelector('[name=\"copyright\"]').checked) {\n        url.searchParams.append('copyright', 1);\n    }\n\n    return url;\n};\n\nconst handleDialogueSubmission = async(editor, modal, data) => {\n    const config = getPluginConfiguration(editor, 'h5p');\n\n    const form = getList(modal.getRoot())[0].querySelector('form');\n    if (!form) {\n        // The form couldn't be found, which is weird.\n        // This should not happen.\n        // Display the dialogue again\n        displayDialogue(editor, Object.assign({}, data));\n        return;\n    }\n\n    // Get the URL from the submitted form.\n    const submittedUrl = form.querySelector('input[name=\"url\"]').value;\n    const url = getUrlFromSubmission(form, submittedUrl, config);\n\n    if (!url) {\n        // The URL is invalid.\n        // Fill it in and represent the dialogue with an error.\n        displayDialogue(editor, Object.assign({}, data, {\n            url: submittedUrl,\n            invalidUrl: true,\n        }));\n        return;\n    }\n\n\n    const content = await renderForPromise(`${component}/content`, {\n        url: url.toString(),\n    });\n\n    const currentPlaceholder = openingSelection.closest('.h5p-placeholder');\n    if (currentPlaceholder) {\n        const newPlaceholder = document.createElement('div');\n        newPlaceholder.innerHTML = content.html;\n        currentPlaceholder.replaceWith(...newPlaceholder.childNodes);\n    } else {\n        // TODO - Make this work better.\n        editor.selection.setContent(content.html);\n    }\n};\n\nconst getCurrentH5PData = (currentH5P) => {\n    const data = {};\n    let url;\n    try {\n        url = new URL(currentH5P.textContent);\n    } catch (error) {\n        return data;\n    }\n\n    if (url.searchParams.has('export')) {\n        data.download = true;\n        url.searchParams.delete('export');\n    }\n\n    if (url.searchParams.has('embed')) {\n        data.embed = true;\n        url.searchParams.delete('embed');\n    }\n\n    if (url.searchParams.has('copyright')) {\n        data.copyright = true;\n        url.searchParams.delete('copyright');\n    }\n\n    data.url = url.toString();\n\n    return data;\n};\n\nconst displayDialogue = async(editor, data = {}) => {\n    const selection = editor.selection.getNode();\n    const currentH5P = selection.closest('.h5p-placeholder');\n    if (currentH5P) {\n        Object.assign(data, getCurrentH5PData(currentH5P));\n    }\n\n    const modal = await ModalFactory.create({\n        type: Modal.TYPE,\n        templateContext: getTemplateContext(editor, data),\n        large: true,\n    });\n    modal.show();\n\n    const $root = modal.getRoot();\n    const root = $root[0];\n    $root.on(ModalEvents.save, (event, modal) => {\n        handleDialogueSubmission(editor, modal, data);\n    });\n\n    root.addEventListener('click', (e) => {\n        const filepickerButton = e.target.closest('[data-target=\"filepicker\"]');\n        if (filepickerButton) {\n            displayFilepicker(editor, 'h5p').then((params) => {\n                if (params.url !== '') {\n                    const input = root.querySelector('form input[name=\"url\"]');\n                    input.value = params.url;\n                }\n                return params;\n            })\n            .catch();\n        }\n    });\n};\n\nconst handleAction = (editor) => {\n    openingSelection = editor.selection.getNode();\n    displayDialogue(editor);\n};\n\n// Setup the H5P Plugin to add a button and menu option.\nexport default new Promise(async(resolve) => {\n    const [tinyMCE, buttonText, buttonImage] = await Promise.all([\n        await getTinyMCE(),\n        getString('buttontitle', component),\n        getButtonImage('icon', component),\n    ]);\n\n    tinyMCE.PluginManager.add(`${component}/plugin`, async(editor) => {\n        // Register the H5P Formatter for use in all buttons.\n        editor.on('PreInit', () => {\n            editor.formatter.register('h5p', {\n                inline: 'div',\n                classes: 'h5p-placeholder',\n            });\n        });\n\n        // Register the H5P Icon.\n        editor.ui.registry.addIcon(component, buttonImage.html);\n\n        // Register the Menu Button as a toggle.\n        // This means that when highlighted over an existing H5P element it will show as toggled on.\n        editor.ui.registry.addToggleButton(component, {\n            icon: component,\n            tooltip: buttonText,\n            onAction: () => handleAction(editor),\n            onSetup: (api) => {\n                // Set the button to be active if the current selection matches the h5p formatter registered above during PreInit.\n                api.setActive(editor.formatter.match('h5p'));\n                const changed = editor.formatter.formatChanged('h5p', (state) => api.setActive(state));\n                return () => changed.unbind();\n            },\n        });\n\n        // Add the H5P Menu Item.\n        // This allows it to be added to a standard menu, or a context menu.\n        editor.ui.registry.addMenuItem(component, {\n            icon: component,\n            text: buttonText,\n            onAction: () => handleAction(editor),\n        });\n\n        // Configure the context menu to show the H5P Menu Item when an H5P element is selected.\n        editor.ui.registry.addContextMenu(component, {\n            update: () => editor.formatter.match('h5p') ? component : '',\n        });\n\n        editor.on('SetContent', () => {\n            // Listen to the SetContent event on the editor and update any h5p-placeholder to not be editable.\n            // Doing this means that the inner content of the placeholder cannot be changed without using the dialogue.\n            // The SetContent event is called whenever content is changed by actions such as initial load, paste, undo, etc.\n            editor.getBody().querySelectorAll('.h5p-placeholder:not([contenteditable])').forEach((node) => {\n                node.contentEditable = false;\n            });\n        });\n    });\n\n    // Resolve the H5P Plugin and include configuration.\n    resolve([`${component}/plugin`, {\n        configure: (instanceConfig) => {\n            // Update the instance configuration to add the H5P menu option to the menus and toolbars.\n            return {\n                // Add\n                contextmenu: addContextmenuItem(instanceConfig.contextmenu, component),\n                toolbar: addToolbarButton(instanceConfig.toolbar, 'content', component),\n                menu: addMenubarItem(instanceConfig.menu, 'insert', component),\n            };\n        },\n    }]);\n\n    return tinyMCE;\n});\n"],"names":["openingSelection","getTemplateContext","editor","data","config","permissions","canUpload","_config$permissions","upload","canEmbed","_config$permissions2","embed","canUploadAndEmbed","fileURL","url","Object","assign","elementid","id","showOptions","optionDownloadButton","optionEmbedButton","optionCopyrightButton","handleDialogueSubmission","async","modal","form","getRoot","querySelector","displayDialogue","submittedUrl","value","URL","_config$permissions3","checked","searchParams","append","_config$permissions4","getUrlFromSubmission","invalidUrl","content","toString","currentPlaceholder","closest","newPlaceholder","document","createElement","innerHTML","html","replaceWith","childNodes","selection","setContent","getCurrentH5PData","currentH5P","textContent","error","has","download","delete","copyright","getNode","ModalFactory","create","type","Modal","TYPE","templateContext","large","show","$root","root","on","ModalEvents","save","event","addEventListener","e","target","then","params","catch","handleAction","Promise","tinyMCE","buttonText","buttonImage","all","PluginManager","add","formatter","register","inline","classes","ui","registry","addIcon","addToggleButton","icon","tooltip","onAction","onSetup","api","setActive","match","changed","formatChanged","state","unbind","addMenuItem","text","addContextMenu","update","getBody","querySelectorAll","forEach","node","contentEditable","resolve","configure","instanceConfig","contextmenu","toolbar","menu"],"mappings":"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"}