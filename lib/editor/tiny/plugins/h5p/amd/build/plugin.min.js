define("tiny_h5p/plugin",["exports","editor_tiny/loader","editor_tiny/utils","core/normalise","core/str","core/templates","tiny_h5p/modal","core/modal_events","core/modal_factory"],(function(_exports,_loader,_utils,_normalise,_str,_templates,_modal,_modal_events,_modal_factory){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Tiny H5P plugin for Moodle.
   *
   * @module      tiny_h5p/plugin
   * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_modal=_interopRequireDefault(_modal),_modal_events=_interopRequireDefault(_modal_events),_modal_factory=_interopRequireDefault(_modal_factory);let openingSelection=null;const getTemplateContext=(editor,data)=>{var _config$permissions$u,_config$permissions,_config$permissions$e,_config$permissions2,_data$url;const config=(0,_utils.getPluginConfiguration)(editor,"h5p"),permissions={canUpload:null!==(_config$permissions$u=null===(_config$permissions=config.permissions)||void 0===_config$permissions?void 0:_config$permissions.upload)&&void 0!==_config$permissions$u&&_config$permissions$u,canEmbed:null!==(_config$permissions$e=null===(_config$permissions2=config.permissions)||void 0===_config$permissions2?void 0:_config$permissions2.embed)&&void 0!==_config$permissions$e&&_config$permissions$e};permissions.canUploadAndEmbed=permissions.canUpload&&permissions.canEmbed;const fileURL=null!==(_data$url=null==data?void 0:data.url)&&void 0!==_data$url?_data$url:"";return Object.assign({},{elementid:editor.id,canUpload:permissions.canUpload,canEmbed:permissions.canEmbed,canUploadAndEmbed:permissions.canUploadAndEmbed,showOptions:{},fileURL:fileURL,optionDownloadButton:!0,optionEmbedButton:!0,optionCopyrightButton:!0},data)},handleDialogueSubmission=async(editor,modal,data)=>{const config=(0,_utils.getPluginConfiguration)(editor,"h5p"),form=(0,_normalise.getList)(modal.getRoot())[0].querySelector("form");if(!form)return void displayDialogue(editor,Object.assign({},data));const submittedUrl=form.querySelector('input[name="url"]').value,url=((form,submittedUrl,config)=>{var _config$permissions3,_config$permissions4;if(!submittedUrl)return null;const url=new URL(submittedUrl);return null!==(_config$permissions3=config.permissions)&&void 0!==_config$permissions3&&_config$permissions3.upload&&form.querySelector('[name="download"]').checked&&url.searchParams.append("export",1),null!==(_config$permissions4=config.permissions)&&void 0!==_config$permissions4&&_config$permissions4.embed&&form.querySelector('[name="embed"]').checked&&url.searchParams.append("embed",1),form.querySelector('[name="copyright"]').checked&&url.searchParams.append("copyright",1),url})(form,submittedUrl,config);if(!url)return void displayDialogue(editor,Object.assign({},data,{url:submittedUrl,invalidUrl:!0}));const content=await(0,_templates.renderForPromise)("".concat("tiny_h5p","/content"),{url:url.toString()}),currentPlaceholder=openingSelection.closest(".h5p-placeholder");if(currentPlaceholder){const newPlaceholder=document.createElement("div");newPlaceholder.innerHTML=content.html,currentPlaceholder.replaceWith(...newPlaceholder.childNodes)}else editor.selection.setContent(content.html)},getCurrentH5PData=currentH5P=>{const data={};let url;try{url=new URL(currentH5P.textContent)}catch(error){return data}return url.searchParams.has("export")&&(data.download=!0,url.searchParams.delete("export")),url.searchParams.has("embed")&&(data.embed=!0,url.searchParams.delete("embed")),url.searchParams.has("copyright")&&(data.copyright=!0,url.searchParams.delete("copyright")),data.url=url.toString(),data},displayDialogue=async function(editor){let data=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const selection=editor.selection.getNode(),currentH5P=selection.closest(".h5p-placeholder");currentH5P&&Object.assign(data,getCurrentH5PData(currentH5P));const modal=await _modal_factory.default.create({type:_modal.default.TYPE,templateContext:getTemplateContext(editor,data),large:!0});modal.show();const $root=modal.getRoot(),root=$root[0];$root.on(_modal_events.default.save,((event,modal)=>{handleDialogueSubmission(editor,modal,data)})),root.addEventListener("click",(e=>{e.target.closest('[data-target="filepicker"]')&&(0,_utils.displayFilepicker)(editor,"h5p").then((params=>{if(""!==params.url){root.querySelector('form input[name="url"]').value=params.url}return params})).catch()}))},handleAction=editor=>{openingSelection=editor.selection.getNode(),displayDialogue(editor)};var _default=new Promise((async resolve=>{const[tinyMCE,buttonText,buttonImage]=await Promise.all([await(0,_loader.getTinyMCE)(),(0,_str.get_string)("buttontitle","tiny_h5p"),(0,_utils.getButtonImage)("icon","tiny_h5p")]);return tinyMCE.PluginManager.add("".concat("tiny_h5p","/plugin"),(async editor=>{editor.on("PreInit",(()=>{editor.formatter.register("h5p",{inline:"div",classes:"h5p-placeholder"})})),editor.ui.registry.addIcon("tiny_h5p",buttonImage.html),editor.ui.registry.addToggleButton("tiny_h5p",{icon:"tiny_h5p",tooltip:buttonText,onAction:()=>handleAction(editor),onSetup:api=>{api.setActive(editor.formatter.match("h5p"));const changed=editor.formatter.formatChanged("h5p",(state=>api.setActive(state)));return()=>changed.unbind()}}),editor.ui.registry.addMenuItem("tiny_h5p",{icon:"tiny_h5p",text:buttonText,onAction:()=>handleAction(editor)}),editor.ui.registry.addContextMenu("tiny_h5p",{update:()=>editor.formatter.match("h5p")?"tiny_h5p":""}),editor.on("SetContent",(()=>{editor.getBody().querySelectorAll(".h5p-placeholder:not([contenteditable])").forEach((node=>{node.contentEditable=!1}))}))})),resolve(["".concat("tiny_h5p","/plugin"),{configure:instanceConfig=>({contextmenu:(0,_utils.addContextmenuItem)(instanceConfig.contextmenu,"tiny_h5p"),toolbar:(0,_utils.addToolbarButton)(instanceConfig.toolbar,"content","tiny_h5p"),menu:(0,_utils.addMenubarItem)(instanceConfig.menu,"insert","tiny_h5p")})}]),tinyMCE}));return _exports.default=_default,_exports.default}));

//# sourceMappingURL=plugin.min.js.map