{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Options helper for Tiny Accessibility Checker plugin.\n *\n * @module      tiny_accessibilitychecker/options\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getPluginOptionName} from 'editor_tiny/options';\nimport {pluginName} from 'tiny_accessibilitychecker/common';\n\nconst ignoredClassesName = getPluginOptionName(pluginName, 'ignoredclasses');\n\n/**\n * Register the options for the Tiny Accessibility Checker plugin.\n *\n * @param {TinyMCE} editor\n */\nexport const register = (editor) => {\n    const registerOption = editor.options.register;\n\n    registerOption(ignoredClassesName, {\n        processor: 'array',\n        \"default\": [],\n    });\n};\n\n/**\n * Get the ignored classes configuration for the Tiny Accessibility Checker plugin.\n *\n * @param {TinyMCE} editor\n * @returns {object}\n */\nexport const getIgnoredClassesName = (editor) => editor.options.get(ignoredClassesName);\n\n/**\n * Add the ignored class for the Tiny Accessibility Checker plugin.\n *\n * @param {TinyMCE} editor\n * @param {string} className\n */\nexport const addIgnoredClassName = (editor, className) => {\n    let existingData = getIgnoredClassesName(editor);\n    existingData.push(className);\n    editor.options.set(ignoredClassesName, existingData);\n};\n"],"names":["ignoredClassesName","pluginName","editor","registerOption","options","register","processor","getIgnoredClassesName","get","className","existingData","push","set"],"mappings":";;;;;;;;MA0BMA,oBAAqB,gCAAoBC,mBAAY,oCAOlCC,UAGrBC,EAFuBD,OAAOE,QAAQC,UAEvBL,mBAAoB,CAC/BM,UAAW,gBACA,YAUNC,sBAAyBL,QAAWA,OAAOE,QAAQI,IAAIR,sGAQjC,CAACE,OAAQO,iBACpCC,aAAeH,sBAAsBL,QACzCQ,aAAaC,KAAKF,WAClBP,OAAOE,QAAQQ,IAAIZ,mBAAoBU"}