{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Equation UI.\n *\n * @module      tiny_equation/ui\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport EquationModal from 'tiny_equation/modal';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {getLibraries, getTexDocsUrl} from 'tiny_equation/options';\nimport {notifyFilterContentUpdated} from 'core/event';\nimport * as TinyEquationRepository from 'tiny_equation/repository';\nimport {displayException} from 'core/notification';\nimport {debounce} from 'core/utils';\nimport Selectors from 'tiny_equation/selectors';\n\nlet currentForm;\nlet sourceEquation = null;\nlet lastCursorPos = 0;\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\n/**\n * Display the equation editor\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor) => {\n    let data = {};\n    const currentEquationData = getCurrentEquationData(editor);\n    if (currentEquationData) {\n        Object.assign(data, currentEquationData);\n    }\n    const modalPromises = await ModalFactory.create({\n        type: EquationModal.TYPE,\n        templateContext: getTemplateContext(editor, data),\n        large: true,\n    });\n\n    modalPromises.show();\n    const $root = await modalPromises.getRoot();\n    const root = $root[0];\n    currentForm = root.querySelector(Selectors.elements.form);\n\n    $root.on(ModalEvents.hidden, () => {\n        modalPromises.destroy();\n    });\n\n    $root.on(ModalEvents.shown, () => {\n        const library = root.querySelector(Selectors.elements.library);\n        TinyEquationRepository.filterEquation(1, library.innerHTML).then(async data => {\n            library.innerHTML = data.content;\n            updatePreview();\n            notifyFilter(library);\n            return data;\n        }).catch(displayException);\n    });\n\n    root.addEventListener('click', (e) => {\n        const libraryItem = e.target.closest(Selectors.elements.libraryItem);\n        const submitAction = e.target.closest(Selectors.actions.submit);\n        const textArea = e.target.closest('.tiny_equation_equation');\n        if (libraryItem) {\n            e.preventDefault();\n            selectLibraryItem(libraryItem);\n        }\n        if (submitAction) {\n            e.preventDefault();\n            setEquation(editor);\n            modalPromises.destroy();\n        }\n        if (textArea) {\n            debounce(updatePreview(), 500);\n        }\n    });\n\n    root.addEventListener('keyup', (e) => {\n        const textArea = e.target.closest(Selectors.elements.equationTextArea);\n        if (textArea) {\n            debounce(updatePreview(), 500);\n        }\n    });\n\n    root.addEventListener('keydown', (e) => {\n        const libraryItem = e.target.closest(Selectors.elements.libraryItem);\n        if (libraryItem) {\n            if (e.keyCode == 37 || e.keyCode == 39) {\n                groupNavigation(e);\n            }\n        }\n    });\n};\n\n/**\n * Get template context.\n * @param {TinyMCE} editor\n * @param {Object} data\n * @returns {Object}\n */\nconst getTemplateContext = (editor, data) => {\n    const libraries = getLibraries(editor);\n    const texDocsUrl = getTexDocsUrl(editor);\n\n    return Object.assign({}, {\n        elementid: editor.id,\n        libraries: libraries,\n        texdocsurl: texDocsUrl,\n        delimiters: Selectors.delimiters,\n    }, data);\n};\n\n/**\n * Handle select library item.\n * @param {Object} libraryItem\n */\nconst selectLibraryItem = (libraryItem) => {\n    const tex = libraryItem.getAttribute('data-tex');\n    const input = currentForm.querySelector(Selectors.elements.equationTextArea);\n    let oldValue,\n        newValue,\n        focusPoint = 0;\n\n    oldValue = input.value;\n\n    newValue = oldValue.substring(0, lastCursorPos);\n    if (newValue.charAt(newValue.length - 1) !== ' ') {\n        newValue += ' ';\n    }\n    newValue += tex;\n    focusPoint = newValue.length;\n\n    if (oldValue.charAt(lastCursorPos) !== ' ') {\n        newValue += ' ';\n    }\n    newValue += oldValue.substring(lastCursorPos, oldValue.length);\n\n    input.value = newValue;\n    input.focus();\n\n    input.selectionStart = input.selectionEnd = focusPoint;\n\n    updatePreview();\n};\n\n/**\n * Update the preview section.\n */\nconst updatePreview = () => {\n    const textarea = currentForm.querySelector(Selectors.elements.equationTextArea),\n        preview = currentForm.querySelector(Selectors.elements.preview);\n    let currentPos = textarea.selectionStart,\n        equation = textarea.value,\n        prefix = '',\n        cursorLatex = Selectors.cursorLatex,\n        isChar;\n\n    // Move the cursor so it does not break expressions.\n    // Start at the very beginning.\n    if (!currentPos) {\n        currentPos = 0;\n    }\n\n    if (sourceEquation) {\n        currentPos = equation.length;\n    }\n\n    // First move back to the beginning of the line.\n    while (equation.charAt(currentPos) === '\\\\' && currentPos >= 0) {\n        currentPos -= 1;\n    }\n    isChar = /[a-zA-Z\\{]/;\n    if (currentPos !== 0) {\n        if (equation.charAt(currentPos - 1) != '{') {\n            // Now match to the end of the line.\n            while (isChar.test(equation.charAt(currentPos)) &&\n                    currentPos < equation.length &&\n                    isChar.test(equation.charAt(currentPos - 1))) {\n                currentPos += 1;\n            }\n        }\n    }\n    // Save the cursor position - for insertion from the library.\n    lastCursorPos = currentPos;\n    equation = prefix + equation.substring(0, currentPos) + cursorLatex + equation.substring(currentPos);\n\n    equation = Selectors.delimiters.start + ' ' + equation + ' ' + Selectors.delimiters.end;\n    TinyEquationRepository.filterEquation(1, equation).then(data => {\n        preview.innerHTML = data.content;\n        notifyFilter(preview);\n    }).catch(displayException);\n};\n\n/**\n * Handle insertion of a new equation, or update of an existing one.\n * @param {TinyMCE} editor\n */\nconst setEquation = (editor) => {\n    const input = currentForm.querySelector(Selectors.elements.equationTextArea);\n    let value = input.value;\n\n    if (value !== '') {\n        if (sourceEquation) {\n            const selectedNode = editor.selection.getNode();\n            const text = selectedNode.textContent;\n            value = ' ' + value + ' ';\n            selectedNode.textContent = text.slice(0, sourceEquation.startInnerPosition)\n                + value\n                + text.slice(sourceEquation.endInnerPosition);\n        } else {\n            value = Selectors.delimiters.start + ' ' + value + ' ' + Selectors.delimiters.end;\n            editor.insertContent(value);\n        }\n    }\n};\n\n/**\n * Notify the filters about the modified nodes\n * @param {Element} element\n */\nconst notifyFilter = (element) => {\n    notifyFilterContentUpdated(element);\n};\n\n/**\n * Get current equation data.\n * @param {TinyMCE} editor\n * @returns {{}}\n */\nconst getCurrentEquationData = (editor) => {\n    let properties = {};\n    const equation = getSelectedEquation(editor);\n    if (equation) {\n        properties.equation = equation;\n    }\n\n    return properties;\n};\n\n/**\n * Get selected equation.\n * @param {TinyMCE} editor\n * @returns {boolean}\n */\nexport const getSelectedEquation = (editor) => {\n    const textSelection = editor.selection.getNode().textContent;\n    let returnValue = false;\n\n    Selectors.equationPatterns.forEach(pattern => {\n        // For each pattern in turn, find all whole matches (including the delimiters).\n        const patternMatches = textSelection.match(new RegExp(pattern.source, \"g\"));\n        if (patternMatches && patternMatches.length) {\n            // This pattern matches at least once. See if this pattern matches our current position.\n            return patternMatches.forEach(match => {\n                // Check each occurrence of this match.\n                let startIndex = 0;\n                let startOuter = textSelection.indexOf(match, startIndex),\n                    endOuter = startOuter + match.length;\n\n                // This match is in our current position - fetch the innerMatch data.\n                let innerMatch = match.match(pattern);\n                if (innerMatch && innerMatch.length) {\n                    // We need the start and end of the inner match for later.\n                    let startInner = textSelection.indexOf(innerMatch[1], startOuter),\n                        endInner = startInner + innerMatch[1].length;\n\n                    // We'll be returning the inner match for use in the editor itself.\n                    returnValue = innerMatch[1];\n\n                    // Save all data for later.\n                    sourceEquation = {\n                        // Outer match data.\n                        startOuterPosition: startOuter,\n                        endOuterPosition: endOuter,\n                        outerMatch: match,\n\n                        // Inner match data.\n                        startInnerPosition: startInner,\n                        endInnerPosition: endInner,\n                        innerMatch: innerMatch\n                    };\n\n                    return true;\n                }\n\n                // Update the startIndex to match the end of the current match so that we can continue hunting\n                // for further matches.\n                startIndex = endOuter;\n            });\n        }\n    });\n\n    // We trim the equation when we load it and then add spaces when we save it.\n    if (returnValue !== false) {\n        returnValue = returnValue.trim();\n    }\n\n    return returnValue;\n};\n\n/**\n * Callback handling the keyboard navigation in the groups of the library.\n * @param {Event} e\n */\nconst groupNavigation = (e) => {\n    e.preventDefault();\n\n    const current = e.target.closest(Selectors.elements.libraryItem),\n        parent = current.parentNode, // This must be the <div> containing all the buttons of the group.\n        buttons = Array.prototype.slice.call(parent.querySelectorAll(Selectors.elements.libraryItem)),\n        direction = e.keyCode !== 37 ? 1 : -1;\n    let index = buttons.indexOf(current),\n        nextButton;\n\n    if (index < 0) {\n        index = 0;\n    }\n\n    index += direction;\n    if (index < 0) {\n        index = buttons.length - 1;\n    } else if (index >= buttons.length) {\n        index = 0;\n    }\n    nextButton = buttons[index];\n    nextButton.focus();\n};\n"],"names":["currentForm","sourceEquation","lastCursorPos","editor","displayDialogue","async","data","currentEquationData","getCurrentEquationData","Object","assign","modalPromises","ModalFactory","create","type","EquationModal","TYPE","templateContext","getTemplateContext","large","show","$root","getRoot","root","querySelector","Selectors","elements","form","on","ModalEvents","hidden","destroy","shown","library","TinyEquationRepository","filterEquation","innerHTML","then","content","updatePreview","notifyFilter","catch","displayException","addEventListener","e","libraryItem","target","closest","submitAction","actions","submit","textArea","preventDefault","selectLibraryItem","setEquation","equationTextArea","keyCode","groupNavigation","libraries","texDocsUrl","elementid","id","texdocsurl","delimiters","tex","getAttribute","input","oldValue","newValue","focusPoint","value","substring","charAt","length","focus","selectionStart","selectionEnd","textarea","preview","isChar","currentPos","equation","cursorLatex","test","start","end","selectedNode","selection","getNode","text","textContent","slice","startInnerPosition","endInnerPosition","insertContent","element","properties","getSelectedEquation","textSelection","returnValue","equationPatterns","forEach","pattern","patternMatches","match","RegExp","source","startIndex","startOuter","indexOf","endOuter","innerMatch","startInner","endInner","startOuterPosition","endOuterPosition","outerMatch","trim","current","parent","parentNode","buttons","Array","prototype","call","querySelectorAll","direction","nextButton","index"],"mappings":"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"}