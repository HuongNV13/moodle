{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {getTinyMCE} from 'editor_tiny/loader';\nimport {getPluginMetadata} from 'editor_tiny/utils';\n\nimport {component, pluginName} from 'tiny_premium/common';\nimport * as Configuration from 'tiny_premium/configuration';\nimport * as Options from 'tiny_premium/options';\nimport {getApiKey} from 'tiny_premium/external';\n\nlet tinyPremiumPromise;\n/**\n * Promise for Tiny Premium API key authentication.\n *\n * @param {string} apikey\n * @return {Promise}\n */\nconst getTinyPremium = (apikey) => {\n    if (!apikey) {\n        return Promise.resolve();\n    }\n\n    if (tinyPremiumPromise) {\n        return tinyPremiumPromise;\n    }\n\n    tinyPremiumPromise = new Promise((resolve, reject) => {\n        const head = document.querySelector('head');\n        const script = document.createElement('script');\n        script.dataset.tinymce = 'premium';\n        script.src = `https://cdn.tiny.cloud/1/${apikey}/tinymce/6/plugins.min.js`;\n        script.referrerpolicy = \"origin\";\n\n        script.addEventListener('load', () => {\n            resolve();\n        }, false);\n\n        script.addEventListener('error', (err) => {\n            reject(err);\n        }, false);\n\n        head.append(script);\n    });\n\n    return tinyPremiumPromise;\n};\n\n/**\n * Tiny Premium plugin for Moodle.\n *\n * @module      tiny_premium/plugin\n * @copyright   2023 David Woloszyn <david.woloszyn@moodle.com>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// eslint-disable-next-line no-async-promise-executor\nexport default new Promise(async(resolve) => {\n    const [\n        tinyMCE,\n        pluginMetadata,\n        preKey,\n    ] = await Promise.all([\n        getTinyMCE(),\n        getPluginMetadata(component, pluginName),\n        getApiKey(1), // TODO: Get the correct contextid instead of system context.\n    ]);\n\n    await getTinyPremium(preKey.apikey);\n\n    tinyMCE.PluginManager.add(`${component}/plugin`, (editor) => {\n        // Register options.\n        Options.register(editor);\n\n        return pluginMetadata;\n    });\n\n    // Resolve the Premium Plugin and include configuration.\n    resolve([`${component}/plugin`, Configuration]);\n});\n"],"names":["tinyPremiumPromise","Promise","async","tinyMCE","pluginMetadata","preKey","all","component","pluginName","apikey","resolve","reject","head","document","querySelector","script","createElement","dataset","tinymce","src","referrerpolicy","addEventListener","err","append","PluginManager","add","editor","Options","register","Configuration"],"mappings":"0rCAuBIA;;;;;;;;aA8CW,IAAIC,SAAQC,MAAAA,gBAEnBC,QACAC,eACAC,cACMJ,QAAQK,IAAI,EAClB,yBACA,4BAAkBC,kBAAWC,qBAC7B,uBAAU,KA/CMC,IAAAA,aAAAA,OAkDCJ,OAAOI,OAjDvBA,OAIDT,qBAIJA,mBAAqB,IAAIC,SAAQ,CAACS,QAASC,gBACjCC,KAAOC,SAASC,cAAc,QAC9BC,OAASF,SAASG,cAAc,UACtCD,OAAOE,QAAQC,QAAU,UACzBH,OAAOI,uCAAkCV,oCACzCM,OAAOK,eAAiB,SAExBL,OAAOM,iBAAiB,QAAQ,KAC5BX,aACD,GAEHK,OAAOM,iBAAiB,SAAUC,MAC9BX,OAAOW,QACR,GAEHV,KAAKW,OAAOR,WAGTf,oBAzBIC,QAAQS,WAkDnBP,QAAQqB,cAAcC,cAAOlB,8BAAqBmB,SAE9CC,QAAQC,SAASF,QAEVtB,kBAIXM,QAAQ,WAAIH,6BAAoBsB"}