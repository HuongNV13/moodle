{"version":3,"file":"repository.min.js","sources":["../../src/moodlenet/repository.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle MoodleNet ajax actions.\n *\n * @module     core/moodlenet/repository\n * @copyright  2023 Huong Nguyen <huongnv13@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      4.2\n */\n\nimport Ajax from 'core/ajax';\n\n/**\n * Get the activity information by course module id.\n *\n * @param {Integer} cmId The course module id.\n * @return {promise}\n */\nexport const getActivityInformation = (cmId) => {\n    const request = {\n        methodname: 'core_moodlenet_get_share_info_activity',\n        args: {\n            cmid: cmId\n        }\n    };\n\n    return Ajax.call([request])[0];\n};\n\n/**\n * Send the activity to Moodlenet.\n *\n * @param {Integer} issuerId The OAuth 2 issuer ID.\n * @param {Integer} courseId The course ID.\n * @param {Integer} cmId The course module ID.\n * @param {Integer} shareFormat The share format.\n * @return {promise}\n */\nexport const sendActivity = (issuerId, courseId, cmId, shareFormat) => {\n    const request = {\n        methodname: 'core_moodlenet_send_activity',\n        args: {\n            issuerid: issuerId,\n            courseid: courseId,\n            cmid: cmId,\n            shareformat: shareFormat,\n        }\n    };\n\n    return Ajax.call([request])[0];\n};\n\n/**\n * Check if the user is already authorized with MoodleNet.\n *\n * @param {Integer} issuerId The OAuth 2 issuer ID.\n * @param {Integer} courseId The course ID.\n * @return {promise}\n */\nexport const authorizationCheck = (issuerId, courseId) => {\n    const request = {\n        methodname: 'core_moodlenet_auth_check',\n        args: {\n            issuerid: issuerId,\n            courseid: courseId,\n        }\n    };\n\n    return Ajax.call([request])[0];\n};\n"],"names":["cmId","request","methodname","args","cmid","Ajax","call","issuerId","courseId","shareFormat","issuerid","courseid","shareformat"],"mappings":";;;;;;;;0OAgCuCA,aAC7BC,QAAU,CACZC,WAAY,yCACZC,KAAM,CACFC,KAAMJ,cAIPK,cAAKC,KAAK,CAACL,UAAU,0BAYJ,CAACM,SAAUC,SAAUR,KAAMS,qBAC7CR,QAAU,CACZC,WAAY,+BACZC,KAAM,CACFO,SAAUH,SACVI,SAAUH,SACVJ,KAAMJ,KACNY,YAAaH,qBAIdJ,cAAKC,KAAK,CAACL,UAAU,gCAUE,CAACM,SAAUC,kBACnCP,QAAU,CACZC,WAAY,4BACZC,KAAM,CACFO,SAAUH,SACVI,SAAUH,kBAIXH,cAAKC,KAAK,CAACL,UAAU"}