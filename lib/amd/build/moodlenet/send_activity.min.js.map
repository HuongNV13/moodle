{"version":3,"file":"send_activity.min.js","sources":["../../src/moodlenet/send_activity.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A module to handle Share operations of the MoodleNet.\n *\n * @module     core/moodlenet/send_activity\n * @copyright  2023 Huong Nguyen <huongnv13@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      4.2\n */\n\nimport Config from 'core/config';\nimport ModalFactory from 'core/modal_factory';\nimport {displayException, addNotification} from 'core/notification';\nimport {get_string as getString} from 'core/str';\nimport Prefetch from \"core/prefetch\";\nimport * as Templates from 'core/templates';\nimport * as MoodleNetRepository from 'core/moodlenet/repository';\nimport SendActivityModal from 'core/moodlenet/send_activity_modal';\n\nconst TYPE_ACTIVITY = \"activity\";\n\nlet currentModal;\n// eslint-disable-next-line no-unused-vars\nlet siteSupportUrl;\n\n/**\n * Handle send to MoodleNet\n */\nconst sendToMoodleNet = () => {\n    const $modal = currentModal.getModal();\n    const modal = $modal[0];\n    modal.querySelector('.modal-header').classList.remove('no-border');\n    modal.querySelector('.modal-header').classList.add('no-header-text');\n\n    currentModal.setBody(Templates.render('core/moodlenet/send_activity_modal_packaging', {}));\n    currentModal.hideFooter();\n};\n\n/**\n * Handle response from MoodleNet.\n * @param {boolean} status\n */\nconst responseFromMoodleNet = (status) => {\n    const $modal = currentModal.getModal();\n    const modal = $modal[0];\n    modal.querySelector('.modal-header').classList.add('no-border');\n    currentModal.setBody(Templates.render('core/moodlenet/send_activity_modal_done', {\n        success: status,\n        sitesupporturl: siteSupportUrl,\n    }));\n\n    if (status) {\n        currentModal.setFooter(Templates.render('core/moodlenet/send_activity_modal_footer_view', {\n            resourseurl: 'https://moodle.net/resource/s57ugtsy61gm-basic-arithmetic-quiz-for-eslefl-learners',\n        }));\n        currentModal.showFooter();\n    }\n};\n\n/**\n * Register events.\n */\nconst registerEventListeners = () => {\n    document.addEventListener('click', e => {\n        const shareAction = e.target.closest('[data-action=\"sendtomoodlenet\"]');\n        const sendAction = e.target.closest('.moodlenet-action-buttons [data-action=\"share\"]');\n        const successAction = e.target.closest('.moodlenet-share-modal-content .loading-icon');\n        const failAction = e.target.closest('.moodlenet-share-modal-content .test-share-large');\n        if (shareAction) {\n            e.preventDefault();\n            const type = shareAction.getAttribute('data-type');\n            const shareType = shareAction.getAttribute('data-sharetype');\n            const cmId = Config.contextInstanceId;\n            const courseId = Config.courseId;\n            if (type == TYPE_ACTIVITY) {\n                window.console.log(cmId, courseId, shareType);\n                MoodleNetRepository.getActivityInformation(cmId).then(async(data) => {\n                    if (data.status) {\n                        siteSupportUrl = data.supportpageurl;\n                        const modalPromise = ModalFactory.create({\n                            type: SendActivityModal.TYPE,\n                            large: true,\n                            templateContext: {\n                                'activitytype': data.type,\n                                'activityname': data.name,\n                                'sharetype': await getString('share_type_' + shareType, 'core_moodlenet'),\n                                'server': data.server,\n                            }\n                        });\n                        return modalPromise.then(modal => {\n                            currentModal = modal;\n                            modal.show();\n                            return modal;\n                        }).catch(displayException);\n                    } else {\n                        return addNotification({\n                            message: data.warnings[0].message,\n                            type: 'error'\n                        });\n                    }\n                }).catch(displayException);\n            }\n        }\n\n        if (sendAction) {\n            e.preventDefault();\n            sendToMoodleNet();\n        }\n\n        if (successAction) {\n            responseFromMoodleNet(true);\n        }\n\n        if (failAction) {\n            responseFromMoodleNet(false);\n        }\n    });\n};\n\nexport const init = () => {\n    Prefetch.prefetchTemplates([\n        'core/moodlenet/send_activity_modal_base',\n    ]);\n    registerEventListeners();\n};\n"],"names":["currentModal","siteSupportUrl","responseFromMoodleNet","status","getModal","querySelector","classList","add","setBody","Templates","render","success","sitesupporturl","setFooter","resourseurl","showFooter","registerEventListeners","document","addEventListener","e","shareAction","target","closest","sendAction","successAction","failAction","preventDefault","type","getAttribute","shareType","cmId","Config","contextInstanceId","courseId","window","console","log","MoodleNetRepository","getActivityInformation","then","async","data","supportpageurl","ModalFactory","create","SendActivityModal","TYPE","large","templateContext","name","server","modal","show","catch","displayException","message","warnings","remove","hideFooter","sendToMoodleNet","prefetchTemplates"],"mappings":";;;;;;;;gZAoCIA,aAEAC,qBAmBEC,sBAAyBC,SACZH,aAAaI,WACP,GACfC,cAAc,iBAAiBC,UAAUC,IAAI,aACnDP,aAAaQ,QAAQC,UAAUC,OAAO,0CAA2C,CAC7EC,QAASR,OACTS,eAAgBX,kBAGhBE,SACAH,aAAaa,UAAUJ,UAAUC,OAAO,iDAAkD,CACtFI,YAAa,wFAEjBd,aAAae,eAOfC,uBAAyB,KAC3BC,SAASC,iBAAiB,SAASC,UACzBC,YAAcD,EAAEE,OAAOC,QAAQ,mCAC/BC,WAAaJ,EAAEE,OAAOC,QAAQ,mDAC9BE,cAAgBL,EAAEE,OAAOC,QAAQ,gDACjCG,WAAaN,EAAEE,OAAOC,QAAQ,uDAChCF,YAAa,CACbD,EAAEO,uBACIC,KAAOP,YAAYQ,aAAa,aAChCC,UAAYT,YAAYQ,aAAa,kBACrCE,KAAOC,gBAAOC,kBACdC,SAAWF,gBAAOE,SAtDd,YAuDNN,OACAO,OAAOC,QAAQC,IAAIN,KAAMG,SAAUJ,WACnCQ,oBAAoBC,uBAAuBR,MAAMS,MAAKC,MAAAA,UAC9CC,KAAKtC,OAAQ,CACbF,eAAiBwC,KAAKC,sBACDC,uBAAaC,OAAO,CACrCjB,KAAMkB,6BAAkBC,KACxBC,OAAO,EACPC,gBAAiB,cACGP,KAAKd,kBACLc,KAAKQ,qBACF,mBAAU,cAAgBpB,UAAW,yBAC9CY,KAAKS,UAGHX,MAAKY,QACrBnD,aAAemD,MACfA,MAAMC,OACCD,SACRE,MAAMC,uCAEF,iCAAgB,CACnBC,QAASd,KAAKe,SAAS,GAAGD,QAC1B5B,KAAM,aAGf0B,MAAMC,iCAIb/B,aACAJ,EAAEO,iBA7EU,YAEdyB,MADSnD,aAAaI,WACP,GACrB+C,MAAM9C,cAAc,iBAAiBC,UAAUmD,OAAO,aACtDN,MAAM9C,cAAc,iBAAiBC,UAAUC,IAAI,kBAEnDP,aAAaQ,QAAQC,UAAUC,OAAO,+CAAgD,KACtFV,aAAa0D,cAuELC,IAGAnC,eACAtB,uBAAsB,GAGtBuB,YACAvB,uBAAsB,qBAKd,uBACP0D,kBAAkB,CACvB,4CAEJ5C"}