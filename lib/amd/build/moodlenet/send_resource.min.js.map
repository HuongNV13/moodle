{"version":3,"file":"send_resource.min.js","sources":["../../src/moodlenet/send_resource.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A module to handle Share operations of the MoodleNet.\n *\n * @module     core/moodlenet/send_resource\n * @copyright  2023 Huong Nguyen <huongnv13@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      4.2\n */\n\nimport Config from 'core/config';\nimport ModalFactory from 'core/modal_factory';\nimport {addNotification, exception as displayException} from 'core/notification';\nimport {get_string as getString} from 'core/str';\nimport Prefetch from \"core/prefetch\";\nimport * as Templates from 'core/templates';\nimport * as MoodleNetService from 'core/moodlenet/service';\nimport * as MoodleNetAuthorize from 'core/moodlenet/authorize';\nimport SendActivityModal from 'core/moodlenet/send_activity_modal';\nimport SendCourseModal from \"./send_course_modal\";\n\nconst TYPE_ACTIVITY = \"activity\";\nconst TYPE_COURSE = \"course\";\n\nlet listenersRegistered = false;\nlet currentModal;\nlet siteSupportUrl;\nlet issuerId;\nlet courseId;\nlet resourceId;\nlet shareFormat;\nlet type;\nlet selectedCmIds;\n\n/**\n * Handle send to MoodleNet.\n *\n * @param {int} issuerId The OAuth 2 issuer ID.\n * @param {int} resourceId The course module ID.\n * @param {int} shareFormat The share format.\n */\nexport const sendToMoodleNet = (issuerId, resourceId, shareFormat) => {\n    const $modal = currentModal.getModal();\n    const modal = $modal[0];\n    modal.querySelector('.modal-header').classList.remove('no-border');\n    modal.querySelector('.modal-header').classList.add('no-header-text');\n\n    currentModal.setBody(Templates.render('core/moodlenet/send_activity_modal_packaging', {}));\n    currentModal.hideFooter();\n\n    let infoPromise;\n    if (type === TYPE_ACTIVITY) {\n        infoPromise = MoodleNetService.sendActivity(issuerId, resourceId, shareFormat);\n    } else if (type === TYPE_COURSE) {\n        infoPromise = MoodleNetService.sendActivity(issuerId, resourceId, shareFormat);\n    } else if (type === 'partial') {\n        infoPromise = MoodleNetService.sendPartialCourse(issuerId, resourceId, selectedCmIds, shareFormat);\n    }\n    infoPromise.then(async(data) => {\n        window.console.log(data);\n        const status = data.status;\n        const resourceUrl = data.resourceurl;\n        return responseFromMoodleNet(status, resourceUrl);\n    }).catch(displayException);\n};\n\n/**\n * Handle response from MoodleNet.\n *\n * @param {boolean} status Response status. True if successful.\n * @param {String} resourceUrl Resource URL.\n */\nconst responseFromMoodleNet = (status, resourceUrl = '') => {\n    const $modal = currentModal.getModal();\n    const modal = $modal[0];\n    modal.querySelector('.modal-header').classList.add('no-border');\n    currentModal.setBody(Templates.render('core/moodlenet/send_activity_modal_done', {\n        success: status,\n        sitesupporturl: siteSupportUrl,\n    }));\n\n    if (status) {\n        currentModal.setFooter(Templates.render('core/moodlenet/send_activity_modal_footer_view', {\n            resourseurl: resourceUrl,\n        }));\n        currentModal.showFooter();\n    }\n};\n\n/**\n * Render the modal to send resource to MoodleNet.\n *\n * @param {obj} data The data of the resource to be shared.\n * @param {string} shareType The type of the resource to be shared.\n * @param {array} selectedActivities Selected activities.\n */\nconst renderModal = async(data, shareType, selectedActivities) => {\n    if (data.status) {\n        siteSupportUrl = data.supportpageurl;\n        issuerId = data.issuerid;\n        let modalConfig = {\n            large: true,\n            templateContext: {\n                'activitytype': data.type,\n                'activityname': data.name,\n                'server': data.server,\n            }\n        };\n        if (shareType == 'partial' && selectedActivities.length > 0) {\n            selectedCmIds = selectedActivities;\n            modalConfig.type = SendCourseModal.TYPE;\n            modalConfig.templateContext.sharetype = await getString('moodlenet:sharetype' + 'resource', 'moodle');\n            modalConfig.templateContext.selectedactivitiesnotice = await getString('moodlenet:sharenotice_partial_activity_number',\n                'moodle', {'selected': selectedActivities.length, 'total': data.totalactivities});\n        } else {\n            modalConfig.type = SendActivityModal.TYPE;\n            modalConfig.templateContext.sharetype = await getString('moodlenet:sharetype' + shareType, 'moodle');\n        }\n        const modalPromise = ModalFactory.create(modalConfig);\n        return modalPromise.then(modal => {\n            currentModal = modal;\n            modal.show();\n            return modal;\n        }).catch(displayException);\n    } else {\n        return addNotification({\n            message: data.warnings[0].message,\n            type: 'error'\n        });\n    }\n};\n\n/**\n * Register events.\n */\nconst registerEventListeners = () => {\n    document.addEventListener('click', e => {\n        const shareAction = e.target.closest('[data-action=\"sendtomoodlenet\"]');\n        const sendAction = e.target.closest('.moodlenet-action-buttons [data-action=\"share\"]');\n        if (shareAction) {\n            e.preventDefault();\n            const shareType = shareAction.getAttribute('data-sharetype');\n            handleModal(shareAction.getAttribute('data-type'), shareType);\n        }\n\n        if (sendAction) {\n            e.preventDefault();\n            courseId = Config.courseId;\n            resourceId = Config.contextInstanceId;\n            shareFormat = 0;\n            MoodleNetAuthorize.handleAuthorization(issuerId, courseId, resourceId, shareFormat);\n        }\n    });\n};\n\nexport const handleModal = (shareActionType, shareType, selectedActivities = []) => {\n    const resourceId = Config.contextInstanceId;\n\n    let infoPromise;\n    type = shareActionType;\n    if (type === TYPE_ACTIVITY) {\n        infoPromise = MoodleNetService.getActivityInformation(resourceId);\n    } else if (type === TYPE_COURSE) {\n        infoPromise = MoodleNetService.getCourseInformation(resourceId);\n    } else if (type === 'partial') {\n        infoPromise = MoodleNetService.getCourseInformation(resourceId);\n    }\n    infoPromise.then(async(data) => {\n        renderModal(data, shareType, selectedActivities).catch(displayException);\n    }).catch(displayException);\n};\n\n/**\n * Initialize.\n */\nexport const init = () => {\n    if (!listenersRegistered) {\n        window.console.log('Init');\n        Prefetch.prefetchTemplates([\n            'core/moodlenet/send_activity_modal_base',\n            'core/moodlenet/send_activity_modal_packaging',\n            'core/moodlenet/send_activity_modal_done',\n            'core/moodlenet/send_activity_modal_footer_view',\n        ]);\n        registerEventListeners();\n        listenersRegistered = true;\n    }\n};\n"],"names":["currentModal","siteSupportUrl","issuerId","courseId","resourceId","shareFormat","type","selectedCmIds","listenersRegistered","modal","getModal","infoPromise","querySelector","classList","remove","add","setBody","Templates","render","hideFooter","MoodleNetService","sendActivity","sendPartialCourse","then","async","window","console","log","data","status","resourceUrl","resourceurl","responseFromMoodleNet","catch","displayException","$modal","success","sitesupporturl","setFooter","resourseurl","showFooter","renderModal","shareType","selectedActivities","supportpageurl","issuerid","modalConfig","large","templateContext","name","server","length","SendCourseModal","TYPE","sharetype","selectedactivitiesnotice","totalactivities","SendActivityModal","ModalFactory","create","show","message","warnings","handleModal","shareActionType","Config","contextInstanceId","getActivityInformation","getCourseInformation","prefetchTemplates","document","addEventListener","e","shareAction","target","closest","sendAction","preventDefault","getAttribute","MoodleNetAuthorize","handleAuthorization"],"mappings":";;;;;;;;qjBAuCIA,aACAC,eACAC,SACAC,SACAC,WACAC,YACAC,KACAC,cARAC,qBAAsB,2BAiBK,CAACN,SAAUE,WAAYC,qBAE5CI,MADST,aAAaU,WACP,OAOjBC,YANJF,MAAMG,cAAc,iBAAiBC,UAAUC,OAAO,aACtDL,MAAMG,cAAc,iBAAiBC,UAAUE,IAAI,kBAEnDf,aAAagB,QAAQC,UAAUC,OAAO,+CAAgD,KACtFlB,aAAamB,aA3BK,aA8Bdb,MA7BY,WA+BLA,KADPK,YAAcS,iBAAiBC,aAAanB,SAAUE,WAAYC,aAGlD,YAATC,OACPK,YAAcS,iBAAiBE,kBAAkBpB,SAAUE,WAAYG,cAAeF,cAE1FM,YAAYY,MAAKC,MAAAA,OACbC,OAAOC,QAAQC,IAAIC,YACbC,OAASD,KAAKC,OACdC,YAAcF,KAAKG,mBAClBC,sBAAsBH,OAAQC,gBACtCG,MAAMC,gCASPF,sBAAwB,SAACH,YAAQC,mEAAc,SAC3CK,OAASnC,aAAaU,WACtBD,MAAQ0B,OAAO,GACrB1B,MAAMG,cAAc,iBAAiBC,UAAUE,IAAI,aACnDf,aAAagB,QAAQC,UAAUC,OAAO,0CAA2C,CAC7EkB,QAASP,OACTQ,eAAgBpC,kBAGhB4B,SACA7B,aAAasC,UAAUrB,UAAUC,OAAO,iDAAkD,CACtFqB,YAAaT,eAEjB9B,aAAawC,eAWfC,YAAcjB,MAAMI,KAAMc,UAAWC,yBACnCf,KAAKC,OAAQ,CACb5B,eAAiB2B,KAAKgB,eACtB1C,SAAW0B,KAAKiB,aACZC,YAAc,CACdC,OAAO,EACPC,gBAAiB,cACGpB,KAAKtB,kBACLsB,KAAKqB,YACXrB,KAAKsB,SAGN,WAAbR,WAA0BC,mBAAmBQ,OAAS,GACtD5C,cAAgBoC,mBAChBG,YAAYxC,KAAO8C,2BAAgBC,KACnCP,YAAYE,gBAAgBM,gBAAkB,mBAAU,8BAAoC,UAC5FR,YAAYE,gBAAgBO,+BAAiC,mBAAU,gDACnE,SAAU,UAAaZ,mBAAmBQ,aAAiBvB,KAAK4B,oBAEpEV,YAAYxC,KAAOmD,6BAAkBJ,KACrCP,YAAYE,gBAAgBM,gBAAkB,mBAAU,sBAAwBZ,UAAW,kBAE1EgB,uBAAaC,OAAOb,aACrBvB,MAAKd,QACrBT,aAAeS,MACfA,MAAMmD,OACCnD,SACRwB,MAAMC,gCAEF,iCAAgB,CACnB2B,QAASjC,KAAKkC,SAAS,GAAGD,QAC1BvD,KAAM,WA4BLyD,YAAc,SAACC,gBAAiBtB,eAAWC,0EAAqB,SACnEvC,WAAa6D,gBAAOC,sBAEtBvD,YACJL,KAAO0D,gBA1IW,aA2Id1D,KACAK,YAAcS,iBAAiB+C,uBAAuB/D,aA3I1C,WA4ILE,MAES,YAATA,QADPK,YAAcS,iBAAiBgD,qBAAqBhE,aAIxDO,YAAYY,MAAKC,MAAAA,OACbiB,YAAYb,KAAMc,UAAWC,oBAAoBV,MAAMC,4BACxDD,MAAMC,yEAMO,KACX1B,sBACDiB,OAAOC,QAAQC,IAAI,0BACV0C,kBAAkB,CACvB,0CACA,+CACA,0CACA,mDA9CRC,SAASC,iBAAiB,SAASC,UACzBC,YAAcD,EAAEE,OAAOC,QAAQ,mCAC/BC,WAAaJ,EAAEE,OAAOC,QAAQ,sDAChCF,YAAa,CACbD,EAAEK,uBACInC,UAAY+B,YAAYK,aAAa,kBAC3Cf,YAAYU,YAAYK,aAAa,aAAcpC,WAGnDkC,aACAJ,EAAEK,iBACF1E,SAAW8D,gBAAO9D,SAClBC,WAAa6D,gBAAOC,kBACpB7D,YAAc,EACd0E,mBAAmBC,oBAAoB9E,SAAUC,SAAUC,WAD7C,OAoClBI,qBAAsB"}