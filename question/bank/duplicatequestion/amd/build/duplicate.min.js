define("qbank_duplicatequestion/duplicate",["exports","core/modal_factory","core/modal_events","core/str","core/notification","core/ajax"],(function(_exports,Modal,ModalEvents,_str,_notification,_ajax){var obj;function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}
/**
   * A javascript module to handle question duplicating.
   *
   * @module qbank_duplicatequestion/duplicate
   * @copyright 2022 Huong Nguyen <huongnv13@gmail.com>
   * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @since 4.1
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,Modal=_interopRequireWildcard(Modal),ModalEvents=_interopRequireWildcard(ModalEvents),_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj};const SELECTOR_duplicateQuestion='[data-action="duplicatequestion"]';_exports.init=()=>{document.addEventListener("click",(e=>{const duplicateAction=e.target.closest(SELECTOR_duplicateQuestion);duplicateAction&&(e.preventDefault(),Modal.create({type:Modal.types.SAVE_CANCEL,title:(0,_str.get_string)("confirmation","admin"),body:"Are you absolutely sure you want to duplicate this question?",buttons:{save:(0,_str.get_string)("yes")}}).then((modal=>(modal.show(),modal))).then((modal=>(modal.getRoot().on(ModalEvents.save,(()=>{const contextId=duplicateAction.dataset.contextid,request={methodname:"qbank_duplicatequestion_make_duplicate",args:{questionid:duplicateAction.dataset.questionid,contextid:contextId,returnurl:duplicateAction.dataset.url}};_ajax.default.call([request])[0].then((data=>{data.status&&window.location.assign(data.returnurl)})).catch(_notification.displayException)})),modal))).catch(_notification.displayException))}))}}));

//# sourceMappingURL=duplicate.min.js.map