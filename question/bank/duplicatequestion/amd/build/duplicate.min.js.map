{"version":3,"file":"duplicate.min.js","sources":["../src/duplicate.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle question duplicating.\n *\n * @module qbank_duplicatequestion/duplicate\n * @copyright 2022 Huong Nguyen <huongnv13@gmail.com>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since 4.1\n */\n\nimport Notification from 'core/notification';\nimport Prefetch from 'core/prefetch';\nimport {get_string as getString} from 'core/str';\nimport * as Modal from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\nimport * as DuplicateQuestionRepository from 'qbank_duplicatequestion/repository';\n\nconst SELECTOR = {\n    duplicateQuestion: '.path-question [data-action=\"duplicatequestion\"]'\n};\n\n/**\n * Register events for duplicate links.\n */\nconst registerEventListeners = () => {\n    document.addEventListener('click', e => {\n        const duplicateAction = e.target.closest(SELECTOR.duplicateQuestion);\n        if (duplicateAction) {\n            e.preventDefault();\n            const contextId = duplicateAction.dataset.contextid;\n            const questionId = duplicateAction.dataset.questionid;\n            const questionName = duplicateAction.dataset.questionname;\n            let body = '';\n            if (questionName === \"\") {\n                body = getString('duplicatequestioncheck_without_name', 'qbank_duplicatequestion');\n            } else {\n                body = getString('duplicatequestioncheck', 'qbank_duplicatequestion', questionName);\n            }\n            const url = duplicateAction.dataset.url;\n            const modalPromise = Modal.create({\n                type: Modal.types.SAVE_CANCEL,\n                title: getString('confirmation', 'admin'),\n                body: body,\n                buttons: {\n                    save: getString('yes')\n                },\n            }).then(modal => {\n                modal.show();\n                return modal;\n            });\n            modalPromise.then(modal => {\n                modal.getRoot().on(ModalEvents.save, () => {\n                    DuplicateQuestionRepository.duplicateQuestion(questionId, contextId, url,).then(data => {\n                        if (data.status) {\n                            return window.location.assign(data.returnurl);\n                        } else {\n                            return Notification.alert(getString('error'), data.warnings[0].message);\n                        }\n                    }).catch(Notification.exception);\n                });\n                return modal;\n            }).catch(Notification.exception);\n        }\n    });\n};\n\n/**\n * Initialises.\n */\nexport const init = () => {\n    Prefetch.prefetchStrings('moodle', ['yes', 'error']);\n    Prefetch.prefetchStrings('core_admin', ['confirmation']);\n    Prefetch.prefetchStrings('qbank_duplicatequestion', ['duplicatequestioncheck', 'duplicatequestioncheck_without_name']);\n    registerEventListeners();\n};\n"],"names":["SELECTOR","prefetchStrings","document","addEventListener","e","duplicateAction","target","closest","preventDefault","contextId","dataset","contextid","questionId","questionid","questionName","questionname","body","url","Modal","create","type","types","SAVE_CANCEL","title","buttons","save","then","modal","show","getRoot","on","ModalEvents","DuplicateQuestionRepository","duplicateQuestion","data","status","window","location","assign","returnurl","Notification","alert","warnings","message","catch","exception"],"mappings":";;;;;;;;+VA+BMA,2BACiB,iEAmDH,uBACPC,gBAAgB,SAAU,CAAC,MAAO,4BAClCA,gBAAgB,aAAc,CAAC,mCAC/BA,gBAAgB,0BAA2B,CAAC,yBAA0B,wCA/C/EC,SAASC,iBAAiB,SAASC,UACzBC,gBAAkBD,EAAEE,OAAOC,QAAQP,+BACrCK,gBAAiB,CACjBD,EAAEI,uBACIC,UAAYJ,gBAAgBK,QAAQC,UACpCC,WAAaP,gBAAgBK,QAAQG,WACrCC,aAAeT,gBAAgBK,QAAQK,iBACzCC,KAAO,GAEPA,KADiB,KAAjBF,cACO,mBAAU,sCAAuC,4BAEjD,mBAAU,yBAA0B,0BAA2BA,oBAEpEG,IAAMZ,gBAAgBK,QAAQO,IACfC,MAAMC,OAAO,CAC9BC,KAAMF,MAAMG,MAAMC,YAClBC,OAAO,mBAAU,eAAgB,SACjCP,KAAMA,KACNQ,QAAS,CACLC,MAAM,mBAAU,UAErBC,MAAKC,QACJA,MAAMC,OACCD,SAEED,MAAKC,QACdA,MAAME,UAAUC,GAAGC,YAAYN,MAAM,KACjCO,4BAA4BC,kBAAkBrB,WAAYH,UAAWQ,KAAMS,MAAKQ,MACxEA,KAAKC,OACEC,OAAOC,SAASC,OAAOJ,KAAKK,WAE5BC,sBAAaC,OAAM,mBAAU,SAAUP,KAAKQ,SAAS,GAAGC,WAEpEC,MAAMJ,sBAAaK,cAEnBlB,SACRiB,MAAMJ,sBAAaK"}