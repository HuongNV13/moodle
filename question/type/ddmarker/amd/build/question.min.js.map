{"version":3,"sources":["../src/question.js"],"names":["define","$","dragDrop","Shapes","DragDropMarkersQuestion","containerId","readOnly","visibleDropZones","getRoot","addClass","cloneDrags","repositionDrags","drawDropzones","prototype","thisQ","find","each","index","draghome","drag","placeHolder","clone","removeClass","getChoice","getDragNo","before","getClassnameNumericSuffix","handleDragStart","e","dragged","target","closest","info","prepare","start","placed","hasClass","hiddenDrag","getDragClone","length","offset","x","y","dragEnd","choiceNo","getChoiceNoFromElement","data","left","top","coordsInBgImg","Point","sendDragToDrop","sendDragHome","removeDragIfNeeded","cloneDragIfNeeded","saveCoordsForChoice","coords","items","thiQ","dragXY","convertToBgImgXY","val","join","node","prefix","classes","attr","classesarr","split","patt1","RegExp","test","patt2","match","exec","document","getElementById","bgImage","point","bgPossition","width","height","root","not","key","item","input","getCoords","remove","i","dragInDrop","dropArea","css","after","append","inputNode","getInput","noOfDrags","displayedDragsInDropArea","displayedDragsInDragHomes","dragclone","displayeddrags","first","html","outerWidth","outerHeight","svg","nextColourIndex","dropZoneNo","colourClass","addDropzone","dropZone","shape","make","existingmarkertext","parse","markertext","markerspan","handles","getHandlePositions","textPos","convertToWindowXY","moveHandle","shapeSVG","makeSvg","setAttribute","coordsStrings","questionManager","eventHandlersInitialised","questions","init","setupEventHandlers","console","log","on","preventDefault","question","getQuestionForEvent","currentTarget"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Question class for drag and drop marker question type, used to support the question and preview pages.\n *\n * @package    qtype_ddmarker\n * @subpackage question\n * @copyright  2018 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// eslint-disable-next-line no-unused-vars\ndefine(['jquery', 'core/dragdrop', 'qtype_ddmarker/shapes', 'core/key_codes'], function($, dragDrop, Shapes, keys) {\n\n    \"use strict\";\n\n    /**\n     * Object to handle one drag-drop markers question.\n     *\n     * @param {String} containerId id of the outer div for this question.\n     * @param {boolean} readOnly whether the question is being displayed read-only.\n     * @param {Object[]} visibleDropZones the geometry of any drop-zones to show.\n     *      Objects have fields shape, coords and markertext.\n     * @constructor\n     */\n    function DragDropMarkersQuestion(containerId, readOnly, visibleDropZones) {\n        this.containerId = containerId;\n        this.visibleDropZones = visibleDropZones;\n        if (readOnly) {\n            this.getRoot().addClass('qtype_ddmarker-readonly');\n        }\n        this.cloneDrags();\n        this.repositionDrags();\n        this.drawDropzones();\n    }\n\n    DragDropMarkersQuestion.prototype.cloneDrags = function() {\n        var thisQ = this;\n        thisQ.getRoot().find('div.draghomes span.marker').each(function(index, draghome) {\n            var drag = $(draghome);\n            var placeHolder = drag.clone();\n            placeHolder.removeClass();\n            placeHolder.addClass('marker choice' + thisQ.getChoice(drag) + ' dragno' + thisQ.getDragNo(drag) + ' dragplaceholder');\n            drag.before(placeHolder);\n        });\n    };\n\n    /**\n     * Get the choice number of a drag.\n     *\n     * @param {jQuery} drag the drag.\n     * @returns {Number} the choice number.\n     */\n    DragDropMarkersQuestion.prototype.getChoice = function(drag) {\n        return this.getClassnameNumericSuffix(drag, 'choice');\n    };\n\n    /**\n     * Get the drag number of a drag.\n     *\n     * @param {jQuery} drag the drag.\n     * @returns {Number} the drag number.\n     */\n    DragDropMarkersQuestion.prototype.getDragNo = function(drag) {\n        return this.getClassnameNumericSuffix(drag, 'dragno');\n    };\n\n    DragDropMarkersQuestion.prototype.handleDragStart = function(e) {\n        var thisQ = this,\n            dragged = $(e.target).closest('.marker');\n\n        var info = dragDrop.prepare(e);\n        if (!info.start) {\n            return;\n        }\n\n        dragged.addClass('beingdragged');\n\n        var placed = !dragged.hasClass('unneeded');\n        if (!placed) {\n            var hiddenDrag = thisQ.getDragClone(dragged);\n            if (hiddenDrag.length) {\n                hiddenDrag.addClass('active');\n                dragged.offset(hiddenDrag.offset());\n            }\n        }\n\n        dragDrop.start(e, dragged, function() {\n            void(1);\n        }, function(x, y, dragged) {\n            thisQ.dragEnd(dragged);\n        });\n    };\n\n    /**\n     * Functionality at the end of a drag drop.\n     * @param {jQuery} dragged the marker that was dragged.\n     */\n    DragDropMarkersQuestion.prototype.dragEnd = function(dragged) {\n        var placed = false,\n            choiceNo = this.getChoiceNoFromElement(dragged);\n\n        dragged.data('pagex', dragged.offset().left).data('pagey', dragged.offset().top);\n        if (this.coordsInBgImg(new Shapes.Point(dragged.data('pagex'), dragged.data('pagey')))) {\n            this.sendDragToDrop(dragged);\n            placed = true;\n        }\n\n        if (!placed) {\n            this.sendDragHome(dragged);\n            this.removeDragIfNeeded(dragged);\n        } else {\n            this.cloneDragIfNeeded(dragged);\n        }\n\n        this.saveCoordsForChoice(choiceNo, dragged);\n    };\n\n    /**\n     * Save the coordinates for a dropped item in the form field.\n     * @param {Number} choiceNo which copy of the choice this was.\n     * @param {jQuery} dropped the choice that was dropped here.\n     */\n    // eslint-disable-next-line no-unused-vars\n    DragDropMarkersQuestion.prototype.saveCoordsForChoice = function(choiceNo, dropped) {\n        var coords = [],\n            items = this.getRoot().find('span.marker.choice' + choiceNo),\n            thiQ = this;\n\n        if (items.length) {\n            items.each(function() {\n                var drag = $(this);\n                if (!drag.hasClass('beingdragged')) {\n                    var dragXY = new Shapes.Point(drag.data('pagex'), drag.data('pagey'));\n                    if (thiQ.coordsInBgImg(dragXY)) {\n                        coords[coords.length] = thiQ.convertToBgImgXY(dragXY);\n                    }\n                }\n            });\n        }\n\n        this.getRoot().find('input.choice' + choiceNo).val(coords.join(';'));\n    };\n\n    /**\n     * Returns the choice number for a node.\n     *\n     * @param {Element|jQuery} node\n     * @returns {Number}\n     */\n    DragDropMarkersQuestion.prototype.getChoiceNoFromElement = function(node) {\n        return Number(this.getClassnameNumericSuffix(node, 'choice'));\n    };\n\n    /**\n     * Returns the numeric part of a class with the given prefix.\n     *\n     * @param {Element|jQuery} node\n     * @param {String} prefix\n     * @returns {Number|null}\n     */\n    DragDropMarkersQuestion.prototype.getClassnameNumericSuffix = function(node, prefix) {\n        var classes = $(node).attr('class');\n        if (classes !== undefined && classes !== '') {\n            var classesarr = classes.split(' ');\n            for (var index = 0; index < classesarr.length; index++) {\n                var patt1 = new RegExp('^' + prefix + '([0-9])+$');\n                if (patt1.test(classesarr[index])) {\n                    var patt2 = new RegExp('([0-9])+$');\n                    var match = patt2.exec(classesarr[index]);\n                    return Number(match[0]);\n                }\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Get the outer div for this question.\n     * @returns {jQuery} containing that div.\n     */\n    DragDropMarkersQuestion.prototype.getRoot = function() {\n        return $(document.getElementById(this.containerId));\n    };\n\n    /**\n     * Get the img that is the background image.\n     * @returns {jQuery} containing that img.\n     */\n    DragDropMarkersQuestion.prototype.bgImage = function() {\n        return this.getRoot().find('img.dropbackground');\n    };\n\n    /**\n     * Utility function converting window coordinates to relative to the\n     * background image coordinates.\n     *\n     * @param {Point} point relative to the page.\n     * @returns {Point} point relative to the background image.\n     */\n    DragDropMarkersQuestion.prototype.convertToBgImgXY = function(point) {\n        var bgImage = this.bgImage();\n        return point.offset(-bgImage.offset().left - 1, -bgImage.offset().top - 1);\n    };\n\n    /**\n     * Is the point within the background image?\n     *\n     * @param {Point} point relative to the BG image.\n     * @return {boolean} true it they are.\n     */\n    DragDropMarkersQuestion.prototype.coordsInBgImg = function(point) {\n        var bgImage = this.bgImage();\n        var bgPossition = bgImage.offset();\n\n        return point.x >= bgPossition.left && point.x < bgPossition.left + bgImage.width()\n            && point.y >= bgPossition.top && point.y < bgPossition.top + bgImage.height();\n    };\n\n    /**\n     * Draws the drag items on the page (and drop zones if required).\n     * The idea is to re-draw all the drags and drops whenever there is a change\n     * like a widow resize or an item dropped in place.\n     */\n    DragDropMarkersQuestion.prototype.repositionDrags = function() {\n        var root = this.getRoot(),\n            thisQ = this;\n\n        root.find('div.draghomes .marker').not('.dragplaceholder').each(function(key, item) {\n            $(item).addClass('unneeded');\n        });\n\n        root.find('input.choices').each(function(key, input) {\n            var choiceNo = thisQ.getChoiceNoFromElement(input),\n                coords = thisQ.getCoords(input);\n            if (coords.length) {\n                var drag = thisQ.getRoot().find('.draghomes' + ' span.marker' + '.choice' + choiceNo).not('.dragplaceholder');\n                drag.remove();\n                for (var i = 0; i < coords.length; i++) {\n                    var dragInDrop = drag.clone();\n                    dragInDrop.data('pagex', coords[i].x).data('pagey', coords[i].y);\n                    thisQ.sendDragToDrop(dragInDrop);\n                }\n                thisQ.getDragClone(drag).addClass('active');\n                thisQ.cloneDragIfNeeded(drag);\n            }\n        });\n    };\n\n    /**\n     * Get drag clone for a given drag.\n     *\n     * @param {jQuery} drag the drag.\n     * @returns {jQuery} the drag's clone.\n     */\n    DragDropMarkersQuestion.prototype.getDragClone = function(drag) {\n        return this.getRoot().find('.draghomes' + ' span.marker' +\n            '.choice' + this.getChoice(drag) + '.dragno' + this.getDragNo(drag) + '.dragplaceholder');\n    };\n\n    /**\n     * Get the img that is the background image.\n     * @returns {jQuery} droparea element.\n     */\n    DragDropMarkersQuestion.prototype.dropArea = function() {\n        return this.getRoot().find('div.droparea');\n    };\n\n    /**\n     * Animate a drag back to its home.\n     *\n     * @param {jQuery} drag the item being moved.\n     */\n    DragDropMarkersQuestion.prototype.sendDragHome = function(drag) {\n        drag.removeClass('beingdragged')\n            .addClass('unneeded')\n            .css('top', '').css('left', '');\n        var placeHolder = this.getDragClone(drag);\n        placeHolder.after(drag);\n        placeHolder.removeClass('active');\n    };\n\n    /**\n     * Animate a drag item into a given place (or back home).\n     *\n     * @param {jQuery} drag the item to place.\n     */\n    DragDropMarkersQuestion.prototype.sendDragToDrop = function(drag) {\n        var dropArea = this.dropArea();\n        drag.removeClass('beingdragged').removeClass('unneeded');\n        var dragXY = this.convertToBgImgXY(new Shapes.Point(drag.data('pagex'), drag.data('pagey')));\n        drag.css('left', dragXY.x).css('top', dragXY.y);\n        dropArea.append(drag);\n    };\n\n    /**\n     * Clone the drag at the draghome area if needed.\n     *\n     * @param {jQuery} drag the item to place.\n     */\n    DragDropMarkersQuestion.prototype.cloneDragIfNeeded = function(drag) {\n        var inputNode = this.getInput(drag),\n            noOfDrags = Number(this.getClassnameNumericSuffix(inputNode, 'noofdrags')),\n            displayedDragsInDropArea = this.getRoot().find('div.droparea .marker.choice' +\n                this.getChoice(drag) + '.dragno' + this.getDragNo(drag)).length,\n            displayedDragsInDragHomes = this.getRoot().find('div.draghomes .marker.choice' +\n                this.getChoice(drag) + '.dragno' + this.getDragNo(drag)).not('.dragplaceholder').length;\n\n        if (displayedDragsInDropArea < noOfDrags && displayedDragsInDragHomes === 0) {\n            var dragclone = drag.clone();\n            dragclone.addClass('unneeded')\n                .css('top', '').css('left', '');\n            this.getDragClone(drag)\n                .removeClass('active')\n                .after(dragclone);\n        }\n    };\n\n    /**\n     * Remove the clone drag at the draghome area if needed.\n     *\n     * @param {jQuery} drag the item to place.\n     */\n    DragDropMarkersQuestion.prototype.removeDragIfNeeded = function(drag) {\n        var displayeddrags = this.getRoot().find('div.draghomes .marker.choice' +\n            this.getChoice(drag) + '.dragno' + this.getDragNo(drag)).not('.dragplaceholder').length;\n        if (displayeddrags > 1) {\n            this.getRoot().find('div.draghomes .marker.choice' +\n                this.getChoice(drag) + '.dragno' + this.getDragNo(drag)).not('.dragplaceholder').first().remove();\n        }\n    };\n\n    /**\n     * Get the input belong to drag.\n     *\n     * @param {jQuery} drag the item to place.\n     * @returns {jQuery} input element.\n     */\n    DragDropMarkersQuestion.prototype.getInput = function(drag) {\n        var choiceNo = this.getChoiceNoFromElement(drag);\n        return this.getRoot().find('input.choices.choice' + choiceNo);\n    };\n\n    /**\n     * Draws the svg shapes of any drop zones that should be visible for feedback purposes.\n     */\n    DragDropMarkersQuestion.prototype.drawDropzones = function() {\n        if (this.visibleDropZones.length > 0) {\n            var bgImage = this.bgImage();\n\n            this.getRoot().find('div.dropzones').html('<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"dropzones\" ' +\n                'width=\"' + bgImage.outerWidth() + '\" ' +\n                'height=\"' + bgImage.outerHeight() + '\"></svg>');\n            var svg = this.getRoot().find('svg.dropzones');\n\n            var nextColourIndex = 0;\n            for (var dropZoneNo = 0; dropZoneNo < this.visibleDropZones.length; dropZoneNo++) {\n                var colourClass = 'color' + nextColourIndex;\n                nextColourIndex = (nextColourIndex + 1) % 8;\n                this.addDropzone(svg, dropZoneNo, colourClass);\n            }\n        }\n    };\n\n    /**\n     * Adds a dropzone shape with colour, coords and link provided to the array of shapes.\n     *\n     * @param {jQuery} svg the SVG image to which to add this drop zone.\n     * @param {int} dropZoneNo which drop-zone to add.\n     * @param {string} colourClass class name\n     */\n    DragDropMarkersQuestion.prototype.addDropzone = function(svg, dropZoneNo, colourClass) {\n        var dropZone = this.visibleDropZones[dropZoneNo],\n            shape = Shapes.make(dropZone.shape, ''),\n            existingmarkertext;\n        if (!shape.parse(dropZone.coords)) {\n            return;\n        }\n\n        existingmarkertext = this.getRoot().find('div.markertexts span.markertext' + dropZoneNo);\n        if (existingmarkertext.length) {\n            if (dropZone.markertext !== '') {\n                existingmarkertext.html(dropZone.markertext);\n            } else {\n                existingmarkertext.remove();\n            }\n        } else if (dropZone.markertext !== '') {\n            var classnames = 'markertext markertext' + dropZoneNo;\n            this.getRoot().find('div.markertexts').append('<span class=\"' + classnames + '\">' +\n                dropZone.markertext + '</span>');\n            var markerspan = this.getRoot().find('div.ddarea div.markertexts span.markertext' + dropZoneNo);\n            if (markerspan.length) {\n                var handles = shape.getHandlePositions(),\n                    textPos = this.convertToWindowXY(handles.moveHandle.offset(\n                        -markerspan.outerWidth() / 2, -markerspan.outerHeight() / 2));\n                markerspan.offset({'left': textPos.x - 4, 'top': textPos.y});\n            }\n        }\n\n        var shapeSVG = shape.makeSvg(svg[0]);\n        shapeSVG.setAttribute('class', 'dropzone ' + colourClass);\n    };\n\n    /**\n     * Converts the relative x and y position coordinates into\n     * absolute x and y position coordinates.\n     *\n     * @param {Point} point relative to the background image.\n     * @returns {Point} point relative to the page.\n     */\n    DragDropMarkersQuestion.prototype.convertToWindowXY = function(point) {\n        var bgImage = this.bgImage();\n        // The +1 seems rather odd, but seems to give the best results in\n        // the three main browsers at a range of zoom levels.\n        // (Its due to the 1px border around the image, that shifts the\n        // image pixels by 1 down and to the left.)\n        return point.offset(bgImage.offset().left + 1, bgImage.offset().top + 1);\n    };\n\n    /**\n     * Determine what drag items need to be shown and\n     * return coords of all drag items except any that are currently being dragged\n     * based on contents of hidden inputs and whether drags are 'infinite' or how many\n     * drags should be shown.\n     *\n     * @param {jQuery} inputNode\n     * @returns {Point[]} coordinates of however many copies of the drag item should be shown.\n     */\n    DragDropMarkersQuestion.prototype.getCoords = function(inputNode) {\n        var coords = [],\n            val = $(inputNode).val();\n        if (val !== '') {\n            var coordsStrings = val.split(';');\n            for (var i = 0; i < coordsStrings.length; i++) {\n                coords[i] = this.convertToWindowXY(Shapes.Point.parse(coordsStrings[i]));\n            }\n        }\n        return coords;\n    };\n\n    /**\n     * Singleton that tracks all the DragDropToTextQuestions on this page, and deals\n     * with event dispatching.\n     *\n     * @type {Object}\n     */\n    var questionManager = {\n\n        /**\n         * {boolean} ensures that the event handlers are only initialised once per page.\n         */\n        eventHandlersInitialised: false,\n\n        /**\n         * {Object} all the questions on this page, indexed by containerId (id on the .que div).\n         */\n        questions: {}, // An object containing all the information about each question on the page.\n\n        /**\n         * Initialise one question.\n         *\n         * @param {String} containerId the id of the div.que that contains this question.\n         * @param {boolean} readOnly whether the question is read-only.\n         * @param {Object[]} visibleDropZones data on any drop zones to draw as part of the feedback.\n         */\n        // eslint-disable-next-line no-unused-vars\n        init: function(containerId, readOnly, visibleDropZones) {\n            questionManager.questions[containerId] = new DragDropMarkersQuestion(containerId, readOnly, visibleDropZones);\n            if (!questionManager.eventHandlersInitialised) {\n                questionManager.setupEventHandlers();\n                questionManager.eventHandlersInitialised = true;\n            }\n            // eslint-disable-next-line no-console\n            console.log('Done');\n        },\n\n        /**\n         * Set up the event handlers that make this question type work. (Done once per page.)\n         */\n        setupEventHandlers: function() {\n            $('body')\n                .on('mousedown touchstart',\n                    '.que.ddmarker:not(.qtype_ddmarker-readonly) div.draghomes .marker', questionManager.handleDragStart)\n                .on('mousedown touchstart',\n                    '.que.ddmarker:not(.qtype_ddmarker-readonly) div.droparea .marker', questionManager.handleDragStart);\n        },\n\n        /**\n         * Handle mouse down / touch start events on markers.\n         * @param {Event} e the DOM event.\n         */\n        handleDragStart: function(e) {\n            e.preventDefault();\n            var question = questionManager.getQuestionForEvent(e);\n            if (question) {\n                question.handleDragStart(e);\n            }\n        },\n\n        /**\n         * Given an event, work out which question it effects.\n         * @param {Event} e the event.\n         * @returns {DragDropMarkersQuestion|undefined} The question, or undefined.\n         */\n        getQuestionForEvent: function(e) {\n            var containerId = $(e.currentTarget).closest('.que.ddmarker').attr('id');\n            return questionManager.questions[containerId];\n        }\n    };\n\n    /**\n     * @alias module:qtype_ddmarker/question\n     */\n    return {\n        /**\n         * Initialise one drag-drop markers question.\n         *\n         * @param {String} containerId id of the outer div for this question.\n         * @param {String} bgImgUrl the URL of the background image.\n         * @param {boolean} readOnly whether the question is being displayed read-only.\n         * @param {String[]} visibleDropZones the geometry of any drop-zones to show.\n         */\n        init: questionManager.init\n    };\n\n});\n"],"file":"question.min.js"}