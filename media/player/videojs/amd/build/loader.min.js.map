{"version":3,"sources":["../src/loader.js"],"names":["ogvPromise","Config","wwwroot","then","ogvBase","window","OGVCompat","OGVLoader","OGVPlayer","catch","Notification","exception","firstLoad","language","langStringCache","setUp","lang","notifyVideoJS","detail","nodes","document","body","addEventListener","eventTypes","filterContentUpdated","e","selector","langStrings","getLanguageJson","find","addBack","each","index","element","id","attr","config","data","modulePromises","techOrder","indexOf","push","ogvjs","debug","base","Promise","all","langJson","videojs","options","flash","swf","playbackRates","userActions","hotkeys","addLanguage","resolve","cacheKey","rawCacheContent","LocalStorage","get","cacheContent","JSON","parse","request","methodname","args","Ajax","call","langStringData","set","result"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Video JS loader.\n *\n * This takes care of applying the filter on content which was dynamically loaded.\n *\n * @module     media_videojs/loader\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Config from 'core/config';\nimport {eventTypes} from 'core_filters/events';\nimport LocalStorage from 'core/localstorage';\nimport Notification from 'core/notification';\nimport jQuery from 'jquery';\n\nconst ogvPromise = import(Config.wwwroot + '/media/player/videojs/ogvjs/ogv.js');\nogvPromise.then(ogvBase => {\n    window.OGVCompat = ogvBase.OGVCompat;\n    window.OGVLoader = ogvBase.OGVLoader;\n    window.OGVPlayer = ogvBase.OGVPlayer;\n    return ogvBase;\n}).catch(Notification.exception);\n\n/** @var {bool} Whether this is the first load of videojs module */\nlet firstLoad;\n\n/** @var {string} The language that is used in the player */\nlet language;\n\n/** @var {object} List of languages and translations for the current page */\nlet langStringCache;\n\n/**\n * Initialisei teh videojs Loader.\n *\n * Adds the listener for the event to then notify video.js.\n *\n * @method\n * @param {string} lang Language to be used in the player\n * @listens event:filterContentUpdated\n */\nexport const setUp = (lang) => {\n    language = lang;\n    firstLoad = true;\n\n    // Notify Video.js about the nodes already present on the page.\n    notifyVideoJS({\n        detail: {\n            nodes: document.body,\n        }\n    });\n\n    // We need to call popover automatically if nodes are added to the page later.\n    document.addEventListener(eventTypes.filterContentUpdated, notifyVideoJS);\n};\n\n/**\n * Notify video.js of new nodes.\n *\n * @param {Event} e The event.\n */\nconst notifyVideoJS = e => {\n    const nodes = jQuery(e.detail.nodes);\n    const selector = '.mediaplugin_videojs';\n    const langStrings = getLanguageJson();\n\n    // Find the descendants matching the expected parent of the audio and video\n    // tags. Then also addBack the nodes matching the same selector. Finally,\n    // we find the audio and video tags contained in those parents. Kind thanks\n    // to jQuery for the simplicity.\n    nodes.find(selector)\n        .addBack(selector)\n        .find('audio, video').each((index, element) => {\n            const id = jQuery(element).attr('id');\n            const config = jQuery(element).data('setup-lazy');\n            const modulePromises = [import('media_videojs/video-lazy')];\n\n            if (config.techOrder && config.techOrder.indexOf('youtube') !== -1) {\n                // Add YouTube to the list of modules we require.\n                modulePromises.push(import('media_videojs/Youtube-lazy'));\n            }\n            if (config.techOrder && config.techOrder.indexOf('flash') !== -1) {\n                // Add Flash to the list of modules we require.\n                modulePromises.push(import('media_videojs/videojs-flash-lazy'));\n            }\n            if (config.techOrder && config.techOrder.indexOf('OgvJS') !== -1) {\n                modulePromises.push(import('media_videojs/ogvjs'));\n            }\n            config.ogvjs = {\n                debug: true,\n                base: Config.wwwroot + '/media/player/videojs/ogvjs'\n            };\n            Promise.all([langStrings, ...modulePromises])\n            .then(([langJson, videojs]) => {\n                if (firstLoad) {\n                    videojs.options.flash.swf = `${Config.wwwroot}/media/player/videojs/videojs/video-js.swf`;\n                    videojs.options.playbackRates = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n                    videojs.options.userActions = {\n                        hotkeys: true,\n                    };\n                    videojs.addLanguage(language, langJson);\n                    firstLoad = false;\n                }\n                videojs(id, config);\n                return;\n            })\n            .catch(Notification.exception);\n        });\n};\n\n/**\n * Returns the json object of the language strings to be used in the player.\n *\n * @returns {Promise}\n */\nconst getLanguageJson = () => {\n    if (langStringCache) {\n        return Promise.resolve(langStringCache);\n    }\n\n    const cacheKey = `media_videojs/${language}`;\n\n    const rawCacheContent = LocalStorage.get(cacheKey);\n    if (rawCacheContent) {\n        const cacheContent = JSON.parse(rawCacheContent);\n\n        langStringCache = cacheContent;\n\n        return Promise.resolve(langStringCache);\n    }\n\n    const request = {\n        methodname: 'media_videojs_get_language',\n        args: {\n            lang: language,\n        },\n    };\n\n    return Ajax.call([request])[0]\n        .then(langStringData => {\n            LocalStorage.set(cacheKey, langStringData);\n\n            return langStringData;\n        })\n        .then(result => JSON.parse(result))\n        .then(langStrings => {\n            langStringCache = langStrings;\n\n            return langStrings;\n        });\n};\n"],"file":"loader.min.js"}