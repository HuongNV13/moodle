define("tool_moodlenet/share",["exports","core/config","core/notification","core/modal_factory","core/str","core/prefetch","core/templates","tool_moodlenet/share_modal_activity","tool_moodlenet/share_modal_course","tool_moodlenet/selectors","tool_moodlenet/repository"],(function(_exports,_config,_notification,_modal_factory,_str,_prefetch,Templates,_share_modal_activity,_share_modal_course,MoodleNetSelectors,MoodleNetRepository){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * A module to handle Share operations of the MoodleNet.
   *
   * @module     tool_moodlenet/share
   * @copyright  2022 Huong Nguyen <huongnv13@gmail.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @since      4.1
   */let currentModal;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_config=_interopRequireDefault(_config),_modal_factory=_interopRequireDefault(_modal_factory),_prefetch=_interopRequireDefault(_prefetch),Templates=_interopRequireWildcard(Templates),_share_modal_activity=_interopRequireDefault(_share_modal_activity),_share_modal_course=_interopRequireDefault(_share_modal_course),MoodleNetSelectors=_interopRequireWildcard(MoodleNetSelectors),MoodleNetRepository=_interopRequireWildcard(MoodleNetRepository);const sendToMoodleNet=status=>{currentModal.getModal()[0].querySelector(".modal-header").classList.remove("no-border"),currentModal.setBody(Templates.render("tool_moodlenet/share_modal_content_packaging",{})),currentModal.hideFooter(),setTimeout((()=>{moodleNetDone(status)}),5e3)},moodleNetDone=status=>{const modal=currentModal.getModal()[0];modal.querySelector(".modal-header").classList.add("hidden"),modal.querySelector(".modal-body").classList.add("pt-0"),currentModal.setBody(Templates.render("tool_moodlenet/share_modal_content_done",{success:status}))},registerEventListeners=()=>{document.addEventListener("click",(e=>{const shareAction=e.target.closest(MoodleNetSelectors.action.share),shareToSuccessAction=e.target.closest('[data-action="share-success"]'),shareToFailAction=e.target.closest('[data-action="share-fail"]'),chooseActivityAction=e.target.closest('[data-action="choose-activity"]');if(shareAction){e.preventDefault();const type=shareAction.getAttribute("data-type");if("activity"==type){const cmId=_config.default.contextInstanceId;MoodleNetRepository.getActivityInformation(cmId).then((data=>{if(data.status){return _modal_factory.default.create({type:_share_modal_activity.default.TYPE,large:!0,templateContext:{activitytype:data.type,activityname:data.name,server:data.server}}).then((modal=>(currentModal=modal,modal.show(),modal))).catch(_notification.displayException)}return(0,_notification.addNotification)({message:data.warnings[0].message,type:"error"})})).catch(_notification.displayException)}else if("course"==type){const courseId=_config.default.courseId;MoodleNetRepository.getCourseActivitiesInformation(courseId).then((data=>{if(data.status){return _modal_factory.default.create({type:_share_modal_course.default.TYPE,large:!0,templateContext:{coursename:data.name,activities:data.activities,server:data.server}}).then((modal=>(currentModal=modal,modal.show(),modal))).catch(_notification.displayException)}return(0,_notification.addNotification)({message:data.warnings[0].message,type:"error"})})).catch(_notification.displayException)}}shareToSuccessAction&&(e.preventDefault(),sendToMoodleNet(!0)),shareToFailAction&&(e.preventDefault(),sendToMoodleNet(!1)),chooseActivityAction&&(()=>{const modal=currentModal.getModal()[0],activityCount=modal.querySelector(".total-activities"),activityCheckboxes=modal.querySelectorAll('[data-action="choose-activity"]'),activityCheckeds=[].filter.call(activityCheckboxes,(el=>el.checked));(0,_str.get_string)("selected_activities_no","tool_moodlenet",activityCheckeds.length).then((str=>{activityCount.innerHTML=str}))})()}))};_exports.init=()=>{_prefetch.default.prefetchString("tool_moodlenet","selected_activities_no"),_prefetch.default.prefetchTemplates(["tool_moodlenet/share_modal_activity","tool_moodlenet/share_modal_course","tool_moodlenet/share_modal_content_done","tool_moodlenet/share_modal_content_packaging"]),registerEventListeners()}}));

//# sourceMappingURL=share.min.js.map